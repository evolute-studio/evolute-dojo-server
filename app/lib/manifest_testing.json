{
  "world": {
    "class_hash": "0x685ed02eefa98fe7e208aa295042e9bbad8029b0d3d6f0ba2b32546efe0a1f9",
    "address": "0x456df5dd00562b48529c589de80c70d0c2a7a73bbfbab6dd2bac7524b332b10",
    "seed": "evolute_duel",
    "name": "Dojo starter",
    "entrypoints": [
      "uuid",
      "set_metadata",
      "register_namespace",
      "register_event",
      "register_model",
      "register_contract",
      "register_library",
      "init_contract",
      "upgrade_event",
      "upgrade_model",
      "upgrade_contract",
      "emit_event",
      "emit_events",
      "set_entity",
      "set_entities",
      "delete_entity",
      "delete_entities",
      "grant_owner",
      "revoke_owner",
      "grant_writer",
      "revoke_writer",
      "upgrade"
    ],
    "abi": [
      {
        "type": "impl",
        "name": "World",
        "interface_name": "dojo::world::iworld::IWorld"
      },
      {
        "type": "struct",
        "name": "core::byte_array::ByteArray",
        "members": [
          {
            "name": "data",
            "type": "core::array::Array::<core::bytes_31::bytes31>"
          },
          {
            "name": "pending_word",
            "type": "core::felt252"
          },
          {
            "name": "pending_word_len",
            "type": "core::integer::u32"
          }
        ]
      },
      {
        "type": "enum",
        "name": "dojo::world::resource::Resource",
        "variants": [
          {
            "name": "Model",
            "type": "(core::starknet::contract_address::ContractAddress, core::felt252)"
          },
          {
            "name": "Event",
            "type": "(core::starknet::contract_address::ContractAddress, core::felt252)"
          },
          {
            "name": "Contract",
            "type": "(core::starknet::contract_address::ContractAddress, core::felt252)"
          },
          {
            "name": "Namespace",
            "type": "core::byte_array::ByteArray"
          },
          {
            "name": "World",
            "type": "()"
          },
          {
            "name": "Unregistered",
            "type": "()"
          },
          {
            "name": "Library",
            "type": "(core::starknet::class_hash::ClassHash, core::felt252)"
          }
        ]
      },
      {
        "type": "struct",
        "name": "dojo::model::metadata::ResourceMetadata",
        "members": [
          {
            "name": "resource_id",
            "type": "core::felt252"
          },
          {
            "name": "metadata_uri",
            "type": "core::byte_array::ByteArray"
          },
          {
            "name": "metadata_hash",
            "type": "core::felt252"
          }
        ]
      },
      {
        "type": "struct",
        "name": "core::array::Span::<core::felt252>",
        "members": [
          {
            "name": "snapshot",
            "type": "@core::array::Array::<core::felt252>"
          }
        ]
      },
      {
        "type": "struct",
        "name": "core::array::Span::<core::array::Span::<core::felt252>>",
        "members": [
          {
            "name": "snapshot",
            "type": "@core::array::Array::<core::array::Span::<core::felt252>>"
          }
        ]
      },
      {
        "type": "enum",
        "name": "dojo::model::definition::ModelIndex",
        "variants": [
          {
            "name": "Keys",
            "type": "core::array::Span::<core::felt252>"
          },
          {
            "name": "Id",
            "type": "core::felt252"
          },
          {
            "name": "MemberId",
            "type": "(core::felt252, core::felt252)"
          }
        ]
      },
      {
        "type": "struct",
        "name": "core::array::Span::<core::integer::u8>",
        "members": [
          {
            "name": "snapshot",
            "type": "@core::array::Array::<core::integer::u8>"
          }
        ]
      },
      {
        "type": "struct",
        "name": "dojo::meta::layout::FieldLayout",
        "members": [
          {
            "name": "selector",
            "type": "core::felt252"
          },
          {
            "name": "layout",
            "type": "dojo::meta::layout::Layout"
          }
        ]
      },
      {
        "type": "struct",
        "name": "core::array::Span::<dojo::meta::layout::FieldLayout>",
        "members": [
          {
            "name": "snapshot",
            "type": "@core::array::Array::<dojo::meta::layout::FieldLayout>"
          }
        ]
      },
      {
        "type": "struct",
        "name": "core::array::Span::<dojo::meta::layout::Layout>",
        "members": [
          {
            "name": "snapshot",
            "type": "@core::array::Array::<dojo::meta::layout::Layout>"
          }
        ]
      },
      {
        "type": "enum",
        "name": "dojo::meta::layout::Layout",
        "variants": [
          {
            "name": "Fixed",
            "type": "core::array::Span::<core::integer::u8>"
          },
          {
            "name": "Struct",
            "type": "core::array::Span::<dojo::meta::layout::FieldLayout>"
          },
          {
            "name": "Tuple",
            "type": "core::array::Span::<dojo::meta::layout::Layout>"
          },
          {
            "name": "Array",
            "type": "core::array::Span::<dojo::meta::layout::Layout>"
          },
          {
            "name": "ByteArray",
            "type": "()"
          },
          {
            "name": "Enum",
            "type": "core::array::Span::<dojo::meta::layout::FieldLayout>"
          }
        ]
      },
      {
        "type": "struct",
        "name": "core::array::Span::<dojo::model::definition::ModelIndex>",
        "members": [
          {
            "name": "snapshot",
            "type": "@core::array::Array::<dojo::model::definition::ModelIndex>"
          }
        ]
      },
      {
        "type": "enum",
        "name": "core::bool",
        "variants": [
          {
            "name": "False",
            "type": "()"
          },
          {
            "name": "True",
            "type": "()"
          }
        ]
      },
      {
        "type": "interface",
        "name": "dojo::world::iworld::IWorld",
        "items": [
          {
            "type": "function",
            "name": "resource",
            "inputs": [
              {
                "name": "selector",
                "type": "core::felt252"
              }
            ],
            "outputs": [
              {
                "type": "dojo::world::resource::Resource"
              }
            ],
            "state_mutability": "view"
          },
          {
            "type": "function",
            "name": "uuid",
            "inputs": [],
            "outputs": [
              {
                "type": "core::integer::u32"
              }
            ],
            "state_mutability": "external"
          },
          {
            "type": "function",
            "name": "metadata",
            "inputs": [
              {
                "name": "resource_selector",
                "type": "core::felt252"
              }
            ],
            "outputs": [
              {
                "type": "dojo::model::metadata::ResourceMetadata"
              }
            ],
            "state_mutability": "view"
          },
          {
            "type": "function",
            "name": "set_metadata",
            "inputs": [
              {
                "name": "metadata",
                "type": "dojo::model::metadata::ResourceMetadata"
              }
            ],
            "outputs": [],
            "state_mutability": "external"
          },
          {
            "type": "function",
            "name": "register_namespace",
            "inputs": [
              {
                "name": "namespace",
                "type": "core::byte_array::ByteArray"
              }
            ],
            "outputs": [],
            "state_mutability": "external"
          },
          {
            "type": "function",
            "name": "register_event",
            "inputs": [
              {
                "name": "namespace",
                "type": "core::byte_array::ByteArray"
              },
              {
                "name": "class_hash",
                "type": "core::starknet::class_hash::ClassHash"
              }
            ],
            "outputs": [],
            "state_mutability": "external"
          },
          {
            "type": "function",
            "name": "register_model",
            "inputs": [
              {
                "name": "namespace",
                "type": "core::byte_array::ByteArray"
              },
              {
                "name": "class_hash",
                "type": "core::starknet::class_hash::ClassHash"
              }
            ],
            "outputs": [],
            "state_mutability": "external"
          },
          {
            "type": "function",
            "name": "register_contract",
            "inputs": [
              {
                "name": "salt",
                "type": "core::felt252"
              },
              {
                "name": "namespace",
                "type": "core::byte_array::ByteArray"
              },
              {
                "name": "class_hash",
                "type": "core::starknet::class_hash::ClassHash"
              }
            ],
            "outputs": [
              {
                "type": "core::starknet::contract_address::ContractAddress"
              }
            ],
            "state_mutability": "external"
          },
          {
            "type": "function",
            "name": "register_library",
            "inputs": [
              {
                "name": "namespace",
                "type": "core::byte_array::ByteArray"
              },
              {
                "name": "class_hash",
                "type": "core::starknet::class_hash::ClassHash"
              },
              {
                "name": "name",
                "type": "core::byte_array::ByteArray"
              },
              {
                "name": "version",
                "type": "core::byte_array::ByteArray"
              }
            ],
            "outputs": [
              {
                "type": "core::starknet::class_hash::ClassHash"
              }
            ],
            "state_mutability": "external"
          },
          {
            "type": "function",
            "name": "init_contract",
            "inputs": [
              {
                "name": "selector",
                "type": "core::felt252"
              },
              {
                "name": "init_calldata",
                "type": "core::array::Span::<core::felt252>"
              }
            ],
            "outputs": [],
            "state_mutability": "external"
          },
          {
            "type": "function",
            "name": "upgrade_event",
            "inputs": [
              {
                "name": "namespace",
                "type": "core::byte_array::ByteArray"
              },
              {
                "name": "class_hash",
                "type": "core::starknet::class_hash::ClassHash"
              }
            ],
            "outputs": [],
            "state_mutability": "external"
          },
          {
            "type": "function",
            "name": "upgrade_model",
            "inputs": [
              {
                "name": "namespace",
                "type": "core::byte_array::ByteArray"
              },
              {
                "name": "class_hash",
                "type": "core::starknet::class_hash::ClassHash"
              }
            ],
            "outputs": [],
            "state_mutability": "external"
          },
          {
            "type": "function",
            "name": "upgrade_contract",
            "inputs": [
              {
                "name": "namespace",
                "type": "core::byte_array::ByteArray"
              },
              {
                "name": "class_hash",
                "type": "core::starknet::class_hash::ClassHash"
              }
            ],
            "outputs": [
              {
                "type": "core::starknet::class_hash::ClassHash"
              }
            ],
            "state_mutability": "external"
          },
          {
            "type": "function",
            "name": "emit_event",
            "inputs": [
              {
                "name": "event_selector",
                "type": "core::felt252"
              },
              {
                "name": "keys",
                "type": "core::array::Span::<core::felt252>"
              },
              {
                "name": "values",
                "type": "core::array::Span::<core::felt252>"
              }
            ],
            "outputs": [],
            "state_mutability": "external"
          },
          {
            "type": "function",
            "name": "emit_events",
            "inputs": [
              {
                "name": "event_selector",
                "type": "core::felt252"
              },
              {
                "name": "keys",
                "type": "core::array::Span::<core::array::Span::<core::felt252>>"
              },
              {
                "name": "values",
                "type": "core::array::Span::<core::array::Span::<core::felt252>>"
              }
            ],
            "outputs": [],
            "state_mutability": "external"
          },
          {
            "type": "function",
            "name": "entity",
            "inputs": [
              {
                "name": "model_selector",
                "type": "core::felt252"
              },
              {
                "name": "index",
                "type": "dojo::model::definition::ModelIndex"
              },
              {
                "name": "layout",
                "type": "dojo::meta::layout::Layout"
              }
            ],
            "outputs": [
              {
                "type": "core::array::Span::<core::felt252>"
              }
            ],
            "state_mutability": "view"
          },
          {
            "type": "function",
            "name": "entities",
            "inputs": [
              {
                "name": "model_selector",
                "type": "core::felt252"
              },
              {
                "name": "indexes",
                "type": "core::array::Span::<dojo::model::definition::ModelIndex>"
              },
              {
                "name": "layout",
                "type": "dojo::meta::layout::Layout"
              }
            ],
            "outputs": [
              {
                "type": "core::array::Span::<core::array::Span::<core::felt252>>"
              }
            ],
            "state_mutability": "view"
          },
          {
            "type": "function",
            "name": "set_entity",
            "inputs": [
              {
                "name": "model_selector",
                "type": "core::felt252"
              },
              {
                "name": "index",
                "type": "dojo::model::definition::ModelIndex"
              },
              {
                "name": "values",
                "type": "core::array::Span::<core::felt252>"
              },
              {
                "name": "layout",
                "type": "dojo::meta::layout::Layout"
              }
            ],
            "outputs": [],
            "state_mutability": "external"
          },
          {
            "type": "function",
            "name": "set_entities",
            "inputs": [
              {
                "name": "model_selector",
                "type": "core::felt252"
              },
              {
                "name": "indexes",
                "type": "core::array::Span::<dojo::model::definition::ModelIndex>"
              },
              {
                "name": "values",
                "type": "core::array::Span::<core::array::Span::<core::felt252>>"
              },
              {
                "name": "layout",
                "type": "dojo::meta::layout::Layout"
              }
            ],
            "outputs": [],
            "state_mutability": "external"
          },
          {
            "type": "function",
            "name": "delete_entity",
            "inputs": [
              {
                "name": "model_selector",
                "type": "core::felt252"
              },
              {
                "name": "index",
                "type": "dojo::model::definition::ModelIndex"
              },
              {
                "name": "layout",
                "type": "dojo::meta::layout::Layout"
              }
            ],
            "outputs": [],
            "state_mutability": "external"
          },
          {
            "type": "function",
            "name": "delete_entities",
            "inputs": [
              {
                "name": "model_selector",
                "type": "core::felt252"
              },
              {
                "name": "indexes",
                "type": "core::array::Span::<dojo::model::definition::ModelIndex>"
              },
              {
                "name": "layout",
                "type": "dojo::meta::layout::Layout"
              }
            ],
            "outputs": [],
            "state_mutability": "external"
          },
          {
            "type": "function",
            "name": "is_owner",
            "inputs": [
              {
                "name": "resource",
                "type": "core::felt252"
              },
              {
                "name": "address",
                "type": "core::starknet::contract_address::ContractAddress"
              }
            ],
            "outputs": [
              {
                "type": "core::bool"
              }
            ],
            "state_mutability": "view"
          },
          {
            "type": "function",
            "name": "grant_owner",
            "inputs": [
              {
                "name": "resource",
                "type": "core::felt252"
              },
              {
                "name": "address",
                "type": "core::starknet::contract_address::ContractAddress"
              }
            ],
            "outputs": [],
            "state_mutability": "external"
          },
          {
            "type": "function",
            "name": "revoke_owner",
            "inputs": [
              {
                "name": "resource",
                "type": "core::felt252"
              },
              {
                "name": "address",
                "type": "core::starknet::contract_address::ContractAddress"
              }
            ],
            "outputs": [],
            "state_mutability": "external"
          },
          {
            "type": "function",
            "name": "owners_count",
            "inputs": [
              {
                "name": "resource",
                "type": "core::felt252"
              }
            ],
            "outputs": [
              {
                "type": "core::integer::u64"
              }
            ],
            "state_mutability": "view"
          },
          {
            "type": "function",
            "name": "is_writer",
            "inputs": [
              {
                "name": "resource",
                "type": "core::felt252"
              },
              {
                "name": "contract",
                "type": "core::starknet::contract_address::ContractAddress"
              }
            ],
            "outputs": [
              {
                "type": "core::bool"
              }
            ],
            "state_mutability": "view"
          },
          {
            "type": "function",
            "name": "grant_writer",
            "inputs": [
              {
                "name": "resource",
                "type": "core::felt252"
              },
              {
                "name": "contract",
                "type": "core::starknet::contract_address::ContractAddress"
              }
            ],
            "outputs": [],
            "state_mutability": "external"
          },
          {
            "type": "function",
            "name": "revoke_writer",
            "inputs": [
              {
                "name": "resource",
                "type": "core::felt252"
              },
              {
                "name": "contract",
                "type": "core::starknet::contract_address::ContractAddress"
              }
            ],
            "outputs": [],
            "state_mutability": "external"
          }
        ]
      },
      {
        "type": "impl",
        "name": "UpgradeableWorld",
        "interface_name": "dojo::world::iworld::IUpgradeableWorld"
      },
      {
        "type": "interface",
        "name": "dojo::world::iworld::IUpgradeableWorld",
        "items": [
          {
            "type": "function",
            "name": "upgrade",
            "inputs": [
              {
                "name": "new_class_hash",
                "type": "core::starknet::class_hash::ClassHash"
              }
            ],
            "outputs": [],
            "state_mutability": "external"
          }
        ]
      },
      {
        "type": "constructor",
        "name": "constructor",
        "inputs": [
          {
            "name": "world_class_hash",
            "type": "core::starknet::class_hash::ClassHash"
          }
        ]
      },
      {
        "type": "event",
        "name": "dojo::world::world_contract::world::WorldSpawned",
        "kind": "struct",
        "members": [
          {
            "name": "creator",
            "type": "core::starknet::contract_address::ContractAddress",
            "kind": "data"
          },
          {
            "name": "class_hash",
            "type": "core::starknet::class_hash::ClassHash",
            "kind": "data"
          }
        ]
      },
      {
        "type": "event",
        "name": "dojo::world::world_contract::world::WorldUpgraded",
        "kind": "struct",
        "members": [
          {
            "name": "class_hash",
            "type": "core::starknet::class_hash::ClassHash",
            "kind": "data"
          }
        ]
      },
      {
        "type": "event",
        "name": "dojo::world::world_contract::world::NamespaceRegistered",
        "kind": "struct",
        "members": [
          {
            "name": "namespace",
            "type": "core::byte_array::ByteArray",
            "kind": "key"
          },
          {
            "name": "hash",
            "type": "core::felt252",
            "kind": "data"
          }
        ]
      },
      {
        "type": "event",
        "name": "dojo::world::world_contract::world::ModelRegistered",
        "kind": "struct",
        "members": [
          {
            "name": "name",
            "type": "core::byte_array::ByteArray",
            "kind": "key"
          },
          {
            "name": "namespace",
            "type": "core::byte_array::ByteArray",
            "kind": "key"
          },
          {
            "name": "class_hash",
            "type": "core::starknet::class_hash::ClassHash",
            "kind": "data"
          },
          {
            "name": "address",
            "type": "core::starknet::contract_address::ContractAddress",
            "kind": "data"
          }
        ]
      },
      {
        "type": "event",
        "name": "dojo::world::world_contract::world::EventRegistered",
        "kind": "struct",
        "members": [
          {
            "name": "name",
            "type": "core::byte_array::ByteArray",
            "kind": "key"
          },
          {
            "name": "namespace",
            "type": "core::byte_array::ByteArray",
            "kind": "key"
          },
          {
            "name": "class_hash",
            "type": "core::starknet::class_hash::ClassHash",
            "kind": "data"
          },
          {
            "name": "address",
            "type": "core::starknet::contract_address::ContractAddress",
            "kind": "data"
          }
        ]
      },
      {
        "type": "event",
        "name": "dojo::world::world_contract::world::ContractRegistered",
        "kind": "struct",
        "members": [
          {
            "name": "name",
            "type": "core::byte_array::ByteArray",
            "kind": "key"
          },
          {
            "name": "namespace",
            "type": "core::byte_array::ByteArray",
            "kind": "key"
          },
          {
            "name": "address",
            "type": "core::starknet::contract_address::ContractAddress",
            "kind": "data"
          },
          {
            "name": "class_hash",
            "type": "core::starknet::class_hash::ClassHash",
            "kind": "data"
          },
          {
            "name": "salt",
            "type": "core::felt252",
            "kind": "data"
          }
        ]
      },
      {
        "type": "event",
        "name": "dojo::world::world_contract::world::ModelUpgraded",
        "kind": "struct",
        "members": [
          {
            "name": "selector",
            "type": "core::felt252",
            "kind": "key"
          },
          {
            "name": "class_hash",
            "type": "core::starknet::class_hash::ClassHash",
            "kind": "data"
          },
          {
            "name": "address",
            "type": "core::starknet::contract_address::ContractAddress",
            "kind": "data"
          },
          {
            "name": "prev_address",
            "type": "core::starknet::contract_address::ContractAddress",
            "kind": "data"
          }
        ]
      },
      {
        "type": "event",
        "name": "dojo::world::world_contract::world::EventUpgraded",
        "kind": "struct",
        "members": [
          {
            "name": "selector",
            "type": "core::felt252",
            "kind": "key"
          },
          {
            "name": "class_hash",
            "type": "core::starknet::class_hash::ClassHash",
            "kind": "data"
          },
          {
            "name": "address",
            "type": "core::starknet::contract_address::ContractAddress",
            "kind": "data"
          },
          {
            "name": "prev_address",
            "type": "core::starknet::contract_address::ContractAddress",
            "kind": "data"
          }
        ]
      },
      {
        "type": "event",
        "name": "dojo::world::world_contract::world::ContractUpgraded",
        "kind": "struct",
        "members": [
          {
            "name": "selector",
            "type": "core::felt252",
            "kind": "key"
          },
          {
            "name": "class_hash",
            "type": "core::starknet::class_hash::ClassHash",
            "kind": "data"
          }
        ]
      },
      {
        "type": "event",
        "name": "dojo::world::world_contract::world::ContractInitialized",
        "kind": "struct",
        "members": [
          {
            "name": "selector",
            "type": "core::felt252",
            "kind": "key"
          },
          {
            "name": "init_calldata",
            "type": "core::array::Span::<core::felt252>",
            "kind": "data"
          }
        ]
      },
      {
        "type": "event",
        "name": "dojo::world::world_contract::world::LibraryRegistered",
        "kind": "struct",
        "members": [
          {
            "name": "name",
            "type": "core::byte_array::ByteArray",
            "kind": "key"
          },
          {
            "name": "namespace",
            "type": "core::byte_array::ByteArray",
            "kind": "key"
          },
          {
            "name": "class_hash",
            "type": "core::starknet::class_hash::ClassHash",
            "kind": "data"
          }
        ]
      },
      {
        "type": "event",
        "name": "dojo::world::world_contract::world::EventEmitted",
        "kind": "struct",
        "members": [
          {
            "name": "selector",
            "type": "core::felt252",
            "kind": "key"
          },
          {
            "name": "system_address",
            "type": "core::starknet::contract_address::ContractAddress",
            "kind": "key"
          },
          {
            "name": "keys",
            "type": "core::array::Span::<core::felt252>",
            "kind": "data"
          },
          {
            "name": "values",
            "type": "core::array::Span::<core::felt252>",
            "kind": "data"
          }
        ]
      },
      {
        "type": "event",
        "name": "dojo::world::world_contract::world::MetadataUpdate",
        "kind": "struct",
        "members": [
          {
            "name": "resource",
            "type": "core::felt252",
            "kind": "key"
          },
          {
            "name": "uri",
            "type": "core::byte_array::ByteArray",
            "kind": "data"
          },
          {
            "name": "hash",
            "type": "core::felt252",
            "kind": "data"
          }
        ]
      },
      {
        "type": "event",
        "name": "dojo::world::world_contract::world::StoreSetRecord",
        "kind": "struct",
        "members": [
          {
            "name": "selector",
            "type": "core::felt252",
            "kind": "key"
          },
          {
            "name": "entity_id",
            "type": "core::felt252",
            "kind": "key"
          },
          {
            "name": "keys",
            "type": "core::array::Span::<core::felt252>",
            "kind": "data"
          },
          {
            "name": "values",
            "type": "core::array::Span::<core::felt252>",
            "kind": "data"
          }
        ]
      },
      {
        "type": "event",
        "name": "dojo::world::world_contract::world::StoreUpdateRecord",
        "kind": "struct",
        "members": [
          {
            "name": "selector",
            "type": "core::felt252",
            "kind": "key"
          },
          {
            "name": "entity_id",
            "type": "core::felt252",
            "kind": "key"
          },
          {
            "name": "values",
            "type": "core::array::Span::<core::felt252>",
            "kind": "data"
          }
        ]
      },
      {
        "type": "event",
        "name": "dojo::world::world_contract::world::StoreUpdateMember",
        "kind": "struct",
        "members": [
          {
            "name": "selector",
            "type": "core::felt252",
            "kind": "key"
          },
          {
            "name": "entity_id",
            "type": "core::felt252",
            "kind": "key"
          },
          {
            "name": "member_selector",
            "type": "core::felt252",
            "kind": "key"
          },
          {
            "name": "values",
            "type": "core::array::Span::<core::felt252>",
            "kind": "data"
          }
        ]
      },
      {
        "type": "event",
        "name": "dojo::world::world_contract::world::StoreDelRecord",
        "kind": "struct",
        "members": [
          {
            "name": "selector",
            "type": "core::felt252",
            "kind": "key"
          },
          {
            "name": "entity_id",
            "type": "core::felt252",
            "kind": "key"
          }
        ]
      },
      {
        "type": "event",
        "name": "dojo::world::world_contract::world::WriterUpdated",
        "kind": "struct",
        "members": [
          {
            "name": "resource",
            "type": "core::felt252",
            "kind": "key"
          },
          {
            "name": "contract",
            "type": "core::starknet::contract_address::ContractAddress",
            "kind": "key"
          },
          {
            "name": "value",
            "type": "core::bool",
            "kind": "data"
          }
        ]
      },
      {
        "type": "event",
        "name": "dojo::world::world_contract::world::OwnerUpdated",
        "kind": "struct",
        "members": [
          {
            "name": "resource",
            "type": "core::felt252",
            "kind": "key"
          },
          {
            "name": "contract",
            "type": "core::starknet::contract_address::ContractAddress",
            "kind": "key"
          },
          {
            "name": "value",
            "type": "core::bool",
            "kind": "data"
          }
        ]
      },
      {
        "type": "event",
        "name": "dojo::world::world_contract::world::Event",
        "kind": "enum",
        "variants": [
          {
            "name": "WorldSpawned",
            "type": "dojo::world::world_contract::world::WorldSpawned",
            "kind": "nested"
          },
          {
            "name": "WorldUpgraded",
            "type": "dojo::world::world_contract::world::WorldUpgraded",
            "kind": "nested"
          },
          {
            "name": "NamespaceRegistered",
            "type": "dojo::world::world_contract::world::NamespaceRegistered",
            "kind": "nested"
          },
          {
            "name": "ModelRegistered",
            "type": "dojo::world::world_contract::world::ModelRegistered",
            "kind": "nested"
          },
          {
            "name": "EventRegistered",
            "type": "dojo::world::world_contract::world::EventRegistered",
            "kind": "nested"
          },
          {
            "name": "ContractRegistered",
            "type": "dojo::world::world_contract::world::ContractRegistered",
            "kind": "nested"
          },
          {
            "name": "ModelUpgraded",
            "type": "dojo::world::world_contract::world::ModelUpgraded",
            "kind": "nested"
          },
          {
            "name": "EventUpgraded",
            "type": "dojo::world::world_contract::world::EventUpgraded",
            "kind": "nested"
          },
          {
            "name": "ContractUpgraded",
            "type": "dojo::world::world_contract::world::ContractUpgraded",
            "kind": "nested"
          },
          {
            "name": "ContractInitialized",
            "type": "dojo::world::world_contract::world::ContractInitialized",
            "kind": "nested"
          },
          {
            "name": "LibraryRegistered",
            "type": "dojo::world::world_contract::world::LibraryRegistered",
            "kind": "nested"
          },
          {
            "name": "EventEmitted",
            "type": "dojo::world::world_contract::world::EventEmitted",
            "kind": "nested"
          },
          {
            "name": "MetadataUpdate",
            "type": "dojo::world::world_contract::world::MetadataUpdate",
            "kind": "nested"
          },
          {
            "name": "StoreSetRecord",
            "type": "dojo::world::world_contract::world::StoreSetRecord",
            "kind": "nested"
          },
          {
            "name": "StoreUpdateRecord",
            "type": "dojo::world::world_contract::world::StoreUpdateRecord",
            "kind": "nested"
          },
          {
            "name": "StoreUpdateMember",
            "type": "dojo::world::world_contract::world::StoreUpdateMember",
            "kind": "nested"
          },
          {
            "name": "StoreDelRecord",
            "type": "dojo::world::world_contract::world::StoreDelRecord",
            "kind": "nested"
          },
          {
            "name": "WriterUpdated",
            "type": "dojo::world::world_contract::world::WriterUpdated",
            "kind": "nested"
          },
          {
            "name": "OwnerUpdated",
            "type": "dojo::world::world_contract::world::OwnerUpdated",
            "kind": "nested"
          }
        ]
      }
    ]
  },
  "contracts": [
    {
      "address": "0x4b1cc0ef650cef04053ad6a00c48a672283244c741aa5ff0667c80b08126f14",
      "class_hash": "0x71a47244a599a7e7bd3171be04874574f0c73d9b6dbc53b5a55a8eb1c04beae",
      "abi": [
        {
          "type": "impl",
          "name": "account_migration__ContractImpl",
          "interface_name": "dojo::contract::interface::IContract"
        },
        {
          "type": "interface",
          "name": "dojo::contract::interface::IContract",
          "items": []
        },
        {
          "type": "impl",
          "name": "account_migration__DeployedContractImpl",
          "interface_name": "dojo::meta::interface::IDeployedResource"
        },
        {
          "type": "struct",
          "name": "core::byte_array::ByteArray",
          "members": [
            {
              "name": "data",
              "type": "core::array::Array::<core::bytes_31::bytes31>"
            },
            {
              "name": "pending_word",
              "type": "core::felt252"
            },
            {
              "name": "pending_word_len",
              "type": "core::integer::u32"
            }
          ]
        },
        {
          "type": "interface",
          "name": "dojo::meta::interface::IDeployedResource",
          "items": [
            {
              "type": "function",
              "name": "dojo_name",
              "inputs": [],
              "outputs": [
                {
                  "type": "core::byte_array::ByteArray"
                }
              ],
              "state_mutability": "view"
            }
          ]
        },
        {
          "type": "function",
          "name": "dojo_init",
          "inputs": [
            {
              "name": "creator_address",
              "type": "core::starknet::contract_address::ContractAddress"
            }
          ],
          "outputs": [],
          "state_mutability": "external"
        },
        {
          "type": "impl",
          "name": "AccountMigrationImpl",
          "interface_name": "evolute_duel::systems::account_migration::IAccountMigration"
        },
        {
          "type": "interface",
          "name": "evolute_duel::systems::account_migration::IAccountMigration",
          "items": [
            {
              "type": "function",
              "name": "initiate_migration",
              "inputs": [
                {
                  "name": "target_controller",
                  "type": "core::starknet::contract_address::ContractAddress"
                }
              ],
              "outputs": [],
              "state_mutability": "external"
            },
            {
              "type": "function",
              "name": "confirm_migration",
              "inputs": [
                {
                  "name": "guest_address",
                  "type": "core::starknet::contract_address::ContractAddress"
                }
              ],
              "outputs": [],
              "state_mutability": "external"
            },
            {
              "type": "function",
              "name": "cancel_migration",
              "inputs": [],
              "outputs": [],
              "state_mutability": "external"
            },
            {
              "type": "function",
              "name": "execute_migration",
              "inputs": [
                {
                  "name": "guest_address",
                  "type": "core::starknet::contract_address::ContractAddress"
                }
              ],
              "outputs": [],
              "state_mutability": "external"
            },
            {
              "type": "function",
              "name": "emergency_cancel_migration",
              "inputs": [
                {
                  "name": "guest_address",
                  "type": "core::starknet::contract_address::ContractAddress"
                }
              ],
              "outputs": [],
              "state_mutability": "external"
            }
          ]
        },
        {
          "type": "impl",
          "name": "WorldProviderImpl",
          "interface_name": "dojo::contract::components::world_provider::IWorldProvider"
        },
        {
          "type": "struct",
          "name": "dojo::world::iworld::IWorldDispatcher",
          "members": [
            {
              "name": "contract_address",
              "type": "core::starknet::contract_address::ContractAddress"
            }
          ]
        },
        {
          "type": "interface",
          "name": "dojo::contract::components::world_provider::IWorldProvider",
          "items": [
            {
              "type": "function",
              "name": "world_dispatcher",
              "inputs": [],
              "outputs": [
                {
                  "type": "dojo::world::iworld::IWorldDispatcher"
                }
              ],
              "state_mutability": "view"
            }
          ]
        },
        {
          "type": "impl",
          "name": "UpgradeableImpl",
          "interface_name": "dojo::contract::components::upgradeable::IUpgradeable"
        },
        {
          "type": "interface",
          "name": "dojo::contract::components::upgradeable::IUpgradeable",
          "items": [
            {
              "type": "function",
              "name": "upgrade",
              "inputs": [
                {
                  "name": "new_class_hash",
                  "type": "core::starknet::class_hash::ClassHash"
                }
              ],
              "outputs": [],
              "state_mutability": "external"
            }
          ]
        },
        {
          "type": "impl",
          "name": "OwnableMixinImpl",
          "interface_name": "openzeppelin_access::ownable::interface::OwnableABI"
        },
        {
          "type": "interface",
          "name": "openzeppelin_access::ownable::interface::OwnableABI",
          "items": [
            {
              "type": "function",
              "name": "owner",
              "inputs": [],
              "outputs": [
                {
                  "type": "core::starknet::contract_address::ContractAddress"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "transfer_ownership",
              "inputs": [
                {
                  "name": "new_owner",
                  "type": "core::starknet::contract_address::ContractAddress"
                }
              ],
              "outputs": [],
              "state_mutability": "external"
            },
            {
              "type": "function",
              "name": "renounce_ownership",
              "inputs": [],
              "outputs": [],
              "state_mutability": "external"
            },
            {
              "type": "function",
              "name": "transferOwnership",
              "inputs": [
                {
                  "name": "newOwner",
                  "type": "core::starknet::contract_address::ContractAddress"
                }
              ],
              "outputs": [],
              "state_mutability": "external"
            },
            {
              "type": "function",
              "name": "renounceOwnership",
              "inputs": [],
              "outputs": [],
              "state_mutability": "external"
            }
          ]
        },
        {
          "type": "constructor",
          "name": "constructor",
          "inputs": []
        },
        {
          "type": "event",
          "name": "dojo::contract::components::upgradeable::upgradeable_cpt::Upgraded",
          "kind": "struct",
          "members": [
            {
              "name": "class_hash",
              "type": "core::starknet::class_hash::ClassHash",
              "kind": "data"
            }
          ]
        },
        {
          "type": "event",
          "name": "dojo::contract::components::upgradeable::upgradeable_cpt::Event",
          "kind": "enum",
          "variants": [
            {
              "name": "Upgraded",
              "type": "dojo::contract::components::upgradeable::upgradeable_cpt::Upgraded",
              "kind": "nested"
            }
          ]
        },
        {
          "type": "event",
          "name": "dojo::contract::components::world_provider::world_provider_cpt::Event",
          "kind": "enum",
          "variants": []
        },
        {
          "type": "event",
          "name": "openzeppelin_access::ownable::ownable::OwnableComponent::OwnershipTransferred",
          "kind": "struct",
          "members": [
            {
              "name": "previous_owner",
              "type": "core::starknet::contract_address::ContractAddress",
              "kind": "key"
            },
            {
              "name": "new_owner",
              "type": "core::starknet::contract_address::ContractAddress",
              "kind": "key"
            }
          ]
        },
        {
          "type": "event",
          "name": "openzeppelin_access::ownable::ownable::OwnableComponent::OwnershipTransferStarted",
          "kind": "struct",
          "members": [
            {
              "name": "previous_owner",
              "type": "core::starknet::contract_address::ContractAddress",
              "kind": "key"
            },
            {
              "name": "new_owner",
              "type": "core::starknet::contract_address::ContractAddress",
              "kind": "key"
            }
          ]
        },
        {
          "type": "event",
          "name": "openzeppelin_access::ownable::ownable::OwnableComponent::Event",
          "kind": "enum",
          "variants": [
            {
              "name": "OwnershipTransferred",
              "type": "openzeppelin_access::ownable::ownable::OwnableComponent::OwnershipTransferred",
              "kind": "nested"
            },
            {
              "name": "OwnershipTransferStarted",
              "type": "openzeppelin_access::ownable::ownable::OwnableComponent::OwnershipTransferStarted",
              "kind": "nested"
            }
          ]
        },
        {
          "type": "event",
          "name": "evolute_duel::systems::account_migration::account_migration::Event",
          "kind": "enum",
          "variants": [
            {
              "name": "UpgradeableEvent",
              "type": "dojo::contract::components::upgradeable::upgradeable_cpt::Event",
              "kind": "nested"
            },
            {
              "name": "WorldProviderEvent",
              "type": "dojo::contract::components::world_provider::world_provider_cpt::Event",
              "kind": "nested"
            },
            {
              "name": "OwnableEvent",
              "type": "openzeppelin_access::ownable::ownable::OwnableComponent::Event",
              "kind": "flat"
            }
          ]
        }
      ],
      "init_calldata": [
        "0x03ec6d1529f9bfe10dfd841453f9cd844b69de963b88af809795b16c91dffd71"
      ],
      "tag": "evolute_duel-account_migration",
      "selector": "0x5973cb679305763a898bdcefb7b8699346093ad050ef1ad9e6c89c4ed6da1f3",
      "systems": [
        "dojo_init",
        "initiate_migration",
        "confirm_migration",
        "cancel_migration",
        "execute_migration",
        "emergency_cancel_migration",
        "upgrade",
        "transfer_ownership",
        "renounce_ownership",
        "transferOwnership",
        "renounceOwnership"
      ]
    },
    {
      "address": "0x3418350ab3b8c76e36bb014110c4448f7fa7a26929051f06d3b296fd6b69bf3",
      "class_hash": "0x73463afb2cc24469c0c2ac9c3fa3706aa686490ee7ec39bf8e1509f78f4fc20",
      "abi": [
        {
          "type": "impl",
          "name": "evlt_token__ContractImpl",
          "interface_name": "dojo::contract::interface::IContract"
        },
        {
          "type": "interface",
          "name": "dojo::contract::interface::IContract",
          "items": []
        },
        {
          "type": "impl",
          "name": "evlt_token__DeployedContractImpl",
          "interface_name": "dojo::meta::interface::IDeployedResource"
        },
        {
          "type": "struct",
          "name": "core::byte_array::ByteArray",
          "members": [
            {
              "name": "data",
              "type": "core::array::Array::<core::bytes_31::bytes31>"
            },
            {
              "name": "pending_word",
              "type": "core::felt252"
            },
            {
              "name": "pending_word_len",
              "type": "core::integer::u32"
            }
          ]
        },
        {
          "type": "interface",
          "name": "dojo::meta::interface::IDeployedResource",
          "items": [
            {
              "type": "function",
              "name": "dojo_name",
              "inputs": [],
              "outputs": [
                {
                  "type": "core::byte_array::ByteArray"
                }
              ],
              "state_mutability": "view"
            }
          ]
        },
        {
          "type": "function",
          "name": "dojo_init",
          "inputs": [
            {
              "name": "admin_address",
              "type": "core::starknet::contract_address::ContractAddress"
            }
          ],
          "outputs": [],
          "state_mutability": "external"
        },
        {
          "type": "impl",
          "name": "EvltTokenProtectedImpl",
          "interface_name": "evolute_duel::systems::tokens::evlt_token::IEvltTokenProtected"
        },
        {
          "type": "struct",
          "name": "core::integer::u256",
          "members": [
            {
              "name": "low",
              "type": "core::integer::u128"
            },
            {
              "name": "high",
              "type": "core::integer::u128"
            }
          ]
        },
        {
          "type": "interface",
          "name": "evolute_duel::systems::tokens::evlt_token::IEvltTokenProtected",
          "items": [
            {
              "type": "function",
              "name": "mint",
              "inputs": [
                {
                  "name": "recipient",
                  "type": "core::starknet::contract_address::ContractAddress"
                },
                {
                  "name": "amount",
                  "type": "core::integer::u256"
                }
              ],
              "outputs": [],
              "state_mutability": "external"
            },
            {
              "type": "function",
              "name": "burn",
              "inputs": [
                {
                  "name": "from",
                  "type": "core::starknet::contract_address::ContractAddress"
                },
                {
                  "name": "amount",
                  "type": "core::integer::u256"
                }
              ],
              "outputs": [],
              "state_mutability": "external"
            },
            {
              "type": "function",
              "name": "set_minter",
              "inputs": [
                {
                  "name": "minter_address",
                  "type": "core::starknet::contract_address::ContractAddress"
                }
              ],
              "outputs": [],
              "state_mutability": "external"
            },
            {
              "type": "function",
              "name": "set_burner",
              "inputs": [
                {
                  "name": "burner_address",
                  "type": "core::starknet::contract_address::ContractAddress"
                }
              ],
              "outputs": [],
              "state_mutability": "external"
            },
            {
              "type": "function",
              "name": "set_transfer_allowed",
              "inputs": [
                {
                  "name": "allowed_address",
                  "type": "core::starknet::contract_address::ContractAddress"
                }
              ],
              "outputs": [],
              "state_mutability": "external"
            }
          ]
        },
        {
          "type": "impl",
          "name": "WorldProviderImpl",
          "interface_name": "dojo::contract::components::world_provider::IWorldProvider"
        },
        {
          "type": "struct",
          "name": "dojo::world::iworld::IWorldDispatcher",
          "members": [
            {
              "name": "contract_address",
              "type": "core::starknet::contract_address::ContractAddress"
            }
          ]
        },
        {
          "type": "interface",
          "name": "dojo::contract::components::world_provider::IWorldProvider",
          "items": [
            {
              "type": "function",
              "name": "world_dispatcher",
              "inputs": [],
              "outputs": [
                {
                  "type": "dojo::world::iworld::IWorldDispatcher"
                }
              ],
              "state_mutability": "view"
            }
          ]
        },
        {
          "type": "impl",
          "name": "UpgradeableImpl",
          "interface_name": "dojo::contract::components::upgradeable::IUpgradeable"
        },
        {
          "type": "interface",
          "name": "dojo::contract::components::upgradeable::IUpgradeable",
          "items": [
            {
              "type": "function",
              "name": "upgrade",
              "inputs": [
                {
                  "name": "new_class_hash",
                  "type": "core::starknet::class_hash::ClassHash"
                }
              ],
              "outputs": [],
              "state_mutability": "external"
            }
          ]
        },
        {
          "type": "impl",
          "name": "ERC20MixinImpl",
          "interface_name": "openzeppelin_token::erc20::interface::IERC20Mixin"
        },
        {
          "type": "enum",
          "name": "core::bool",
          "variants": [
            {
              "name": "False",
              "type": "()"
            },
            {
              "name": "True",
              "type": "()"
            }
          ]
        },
        {
          "type": "interface",
          "name": "openzeppelin_token::erc20::interface::IERC20Mixin",
          "items": [
            {
              "type": "function",
              "name": "total_supply",
              "inputs": [],
              "outputs": [
                {
                  "type": "core::integer::u256"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "balance_of",
              "inputs": [
                {
                  "name": "account",
                  "type": "core::starknet::contract_address::ContractAddress"
                }
              ],
              "outputs": [
                {
                  "type": "core::integer::u256"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "allowance",
              "inputs": [
                {
                  "name": "owner",
                  "type": "core::starknet::contract_address::ContractAddress"
                },
                {
                  "name": "spender",
                  "type": "core::starknet::contract_address::ContractAddress"
                }
              ],
              "outputs": [
                {
                  "type": "core::integer::u256"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "transfer",
              "inputs": [
                {
                  "name": "recipient",
                  "type": "core::starknet::contract_address::ContractAddress"
                },
                {
                  "name": "amount",
                  "type": "core::integer::u256"
                }
              ],
              "outputs": [
                {
                  "type": "core::bool"
                }
              ],
              "state_mutability": "external"
            },
            {
              "type": "function",
              "name": "transfer_from",
              "inputs": [
                {
                  "name": "sender",
                  "type": "core::starknet::contract_address::ContractAddress"
                },
                {
                  "name": "recipient",
                  "type": "core::starknet::contract_address::ContractAddress"
                },
                {
                  "name": "amount",
                  "type": "core::integer::u256"
                }
              ],
              "outputs": [
                {
                  "type": "core::bool"
                }
              ],
              "state_mutability": "external"
            },
            {
              "type": "function",
              "name": "approve",
              "inputs": [
                {
                  "name": "spender",
                  "type": "core::starknet::contract_address::ContractAddress"
                },
                {
                  "name": "amount",
                  "type": "core::integer::u256"
                }
              ],
              "outputs": [
                {
                  "type": "core::bool"
                }
              ],
              "state_mutability": "external"
            },
            {
              "type": "function",
              "name": "name",
              "inputs": [],
              "outputs": [
                {
                  "type": "core::byte_array::ByteArray"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "symbol",
              "inputs": [],
              "outputs": [
                {
                  "type": "core::byte_array::ByteArray"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "decimals",
              "inputs": [],
              "outputs": [
                {
                  "type": "core::integer::u8"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "totalSupply",
              "inputs": [],
              "outputs": [
                {
                  "type": "core::integer::u256"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "balanceOf",
              "inputs": [
                {
                  "name": "account",
                  "type": "core::starknet::contract_address::ContractAddress"
                }
              ],
              "outputs": [
                {
                  "type": "core::integer::u256"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "transferFrom",
              "inputs": [
                {
                  "name": "sender",
                  "type": "core::starknet::contract_address::ContractAddress"
                },
                {
                  "name": "recipient",
                  "type": "core::starknet::contract_address::ContractAddress"
                },
                {
                  "name": "amount",
                  "type": "core::integer::u256"
                }
              ],
              "outputs": [
                {
                  "type": "core::bool"
                }
              ],
              "state_mutability": "external"
            }
          ]
        },
        {
          "type": "impl",
          "name": "AccessControlMixinImpl",
          "interface_name": "openzeppelin_access::accesscontrol::interface::AccessControlABI"
        },
        {
          "type": "interface",
          "name": "openzeppelin_access::accesscontrol::interface::AccessControlABI",
          "items": [
            {
              "type": "function",
              "name": "has_role",
              "inputs": [
                {
                  "name": "role",
                  "type": "core::felt252"
                },
                {
                  "name": "account",
                  "type": "core::starknet::contract_address::ContractAddress"
                }
              ],
              "outputs": [
                {
                  "type": "core::bool"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "get_role_admin",
              "inputs": [
                {
                  "name": "role",
                  "type": "core::felt252"
                }
              ],
              "outputs": [
                {
                  "type": "core::felt252"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "grant_role",
              "inputs": [
                {
                  "name": "role",
                  "type": "core::felt252"
                },
                {
                  "name": "account",
                  "type": "core::starknet::contract_address::ContractAddress"
                }
              ],
              "outputs": [],
              "state_mutability": "external"
            },
            {
              "type": "function",
              "name": "revoke_role",
              "inputs": [
                {
                  "name": "role",
                  "type": "core::felt252"
                },
                {
                  "name": "account",
                  "type": "core::starknet::contract_address::ContractAddress"
                }
              ],
              "outputs": [],
              "state_mutability": "external"
            },
            {
              "type": "function",
              "name": "renounce_role",
              "inputs": [
                {
                  "name": "role",
                  "type": "core::felt252"
                },
                {
                  "name": "account",
                  "type": "core::starknet::contract_address::ContractAddress"
                }
              ],
              "outputs": [],
              "state_mutability": "external"
            },
            {
              "type": "function",
              "name": "hasRole",
              "inputs": [
                {
                  "name": "role",
                  "type": "core::felt252"
                },
                {
                  "name": "account",
                  "type": "core::starknet::contract_address::ContractAddress"
                }
              ],
              "outputs": [
                {
                  "type": "core::bool"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "getRoleAdmin",
              "inputs": [
                {
                  "name": "role",
                  "type": "core::felt252"
                }
              ],
              "outputs": [
                {
                  "type": "core::felt252"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "grantRole",
              "inputs": [
                {
                  "name": "role",
                  "type": "core::felt252"
                },
                {
                  "name": "account",
                  "type": "core::starknet::contract_address::ContractAddress"
                }
              ],
              "outputs": [],
              "state_mutability": "external"
            },
            {
              "type": "function",
              "name": "revokeRole",
              "inputs": [
                {
                  "name": "role",
                  "type": "core::felt252"
                },
                {
                  "name": "account",
                  "type": "core::starknet::contract_address::ContractAddress"
                }
              ],
              "outputs": [],
              "state_mutability": "external"
            },
            {
              "type": "function",
              "name": "renounceRole",
              "inputs": [
                {
                  "name": "role",
                  "type": "core::felt252"
                },
                {
                  "name": "account",
                  "type": "core::starknet::contract_address::ContractAddress"
                }
              ],
              "outputs": [],
              "state_mutability": "external"
            },
            {
              "type": "function",
              "name": "supports_interface",
              "inputs": [
                {
                  "name": "interface_id",
                  "type": "core::felt252"
                }
              ],
              "outputs": [
                {
                  "type": "core::bool"
                }
              ],
              "state_mutability": "view"
            }
          ]
        },
        {
          "type": "constructor",
          "name": "constructor",
          "inputs": []
        },
        {
          "type": "event",
          "name": "dojo::contract::components::upgradeable::upgradeable_cpt::Upgraded",
          "kind": "struct",
          "members": [
            {
              "name": "class_hash",
              "type": "core::starknet::class_hash::ClassHash",
              "kind": "data"
            }
          ]
        },
        {
          "type": "event",
          "name": "dojo::contract::components::upgradeable::upgradeable_cpt::Event",
          "kind": "enum",
          "variants": [
            {
              "name": "Upgraded",
              "type": "dojo::contract::components::upgradeable::upgradeable_cpt::Upgraded",
              "kind": "nested"
            }
          ]
        },
        {
          "type": "event",
          "name": "dojo::contract::components::world_provider::world_provider_cpt::Event",
          "kind": "enum",
          "variants": []
        },
        {
          "type": "event",
          "name": "openzeppelin_token::erc20::erc20::ERC20Component::Transfer",
          "kind": "struct",
          "members": [
            {
              "name": "from",
              "type": "core::starknet::contract_address::ContractAddress",
              "kind": "key"
            },
            {
              "name": "to",
              "type": "core::starknet::contract_address::ContractAddress",
              "kind": "key"
            },
            {
              "name": "value",
              "type": "core::integer::u256",
              "kind": "data"
            }
          ]
        },
        {
          "type": "event",
          "name": "openzeppelin_token::erc20::erc20::ERC20Component::Approval",
          "kind": "struct",
          "members": [
            {
              "name": "owner",
              "type": "core::starknet::contract_address::ContractAddress",
              "kind": "key"
            },
            {
              "name": "spender",
              "type": "core::starknet::contract_address::ContractAddress",
              "kind": "key"
            },
            {
              "name": "value",
              "type": "core::integer::u256",
              "kind": "data"
            }
          ]
        },
        {
          "type": "event",
          "name": "openzeppelin_token::erc20::erc20::ERC20Component::Event",
          "kind": "enum",
          "variants": [
            {
              "name": "Transfer",
              "type": "openzeppelin_token::erc20::erc20::ERC20Component::Transfer",
              "kind": "nested"
            },
            {
              "name": "Approval",
              "type": "openzeppelin_token::erc20::erc20::ERC20Component::Approval",
              "kind": "nested"
            }
          ]
        },
        {
          "type": "event",
          "name": "openzeppelin_access::accesscontrol::accesscontrol::AccessControlComponent::RoleGranted",
          "kind": "struct",
          "members": [
            {
              "name": "role",
              "type": "core::felt252",
              "kind": "data"
            },
            {
              "name": "account",
              "type": "core::starknet::contract_address::ContractAddress",
              "kind": "data"
            },
            {
              "name": "sender",
              "type": "core::starknet::contract_address::ContractAddress",
              "kind": "data"
            }
          ]
        },
        {
          "type": "event",
          "name": "openzeppelin_access::accesscontrol::accesscontrol::AccessControlComponent::RoleRevoked",
          "kind": "struct",
          "members": [
            {
              "name": "role",
              "type": "core::felt252",
              "kind": "data"
            },
            {
              "name": "account",
              "type": "core::starknet::contract_address::ContractAddress",
              "kind": "data"
            },
            {
              "name": "sender",
              "type": "core::starknet::contract_address::ContractAddress",
              "kind": "data"
            }
          ]
        },
        {
          "type": "event",
          "name": "openzeppelin_access::accesscontrol::accesscontrol::AccessControlComponent::RoleAdminChanged",
          "kind": "struct",
          "members": [
            {
              "name": "role",
              "type": "core::felt252",
              "kind": "data"
            },
            {
              "name": "previous_admin_role",
              "type": "core::felt252",
              "kind": "data"
            },
            {
              "name": "new_admin_role",
              "type": "core::felt252",
              "kind": "data"
            }
          ]
        },
        {
          "type": "event",
          "name": "openzeppelin_access::accesscontrol::accesscontrol::AccessControlComponent::Event",
          "kind": "enum",
          "variants": [
            {
              "name": "RoleGranted",
              "type": "openzeppelin_access::accesscontrol::accesscontrol::AccessControlComponent::RoleGranted",
              "kind": "nested"
            },
            {
              "name": "RoleRevoked",
              "type": "openzeppelin_access::accesscontrol::accesscontrol::AccessControlComponent::RoleRevoked",
              "kind": "nested"
            },
            {
              "name": "RoleAdminChanged",
              "type": "openzeppelin_access::accesscontrol::accesscontrol::AccessControlComponent::RoleAdminChanged",
              "kind": "nested"
            }
          ]
        },
        {
          "type": "event",
          "name": "evolute_duel::systems::tokens::evlt_token::evlt_token::Minted",
          "kind": "struct",
          "members": [
            {
              "name": "recipient",
              "type": "core::starknet::contract_address::ContractAddress",
              "kind": "key"
            },
            {
              "name": "amount",
              "type": "core::integer::u256",
              "kind": "data"
            },
            {
              "name": "minter",
              "type": "core::starknet::contract_address::ContractAddress",
              "kind": "data"
            }
          ]
        },
        {
          "type": "event",
          "name": "evolute_duel::systems::tokens::evlt_token::evlt_token::Burned",
          "kind": "struct",
          "members": [
            {
              "name": "from",
              "type": "core::starknet::contract_address::ContractAddress",
              "kind": "key"
            },
            {
              "name": "amount",
              "type": "core::integer::u256",
              "kind": "data"
            },
            {
              "name": "burner",
              "type": "core::starknet::contract_address::ContractAddress",
              "kind": "data"
            }
          ]
        },
        {
          "type": "event",
          "name": "openzeppelin_introspection::src5::SRC5Component::Event",
          "kind": "enum",
          "variants": []
        },
        {
          "type": "event",
          "name": "evolute_duel::systems::tokens::evlt_token::evlt_token::Event",
          "kind": "enum",
          "variants": [
            {
              "name": "UpgradeableEvent",
              "type": "dojo::contract::components::upgradeable::upgradeable_cpt::Event",
              "kind": "nested"
            },
            {
              "name": "WorldProviderEvent",
              "type": "dojo::contract::components::world_provider::world_provider_cpt::Event",
              "kind": "nested"
            },
            {
              "name": "ERC20Event",
              "type": "openzeppelin_token::erc20::erc20::ERC20Component::Event",
              "kind": "flat"
            },
            {
              "name": "AccessControlEvent",
              "type": "openzeppelin_access::accesscontrol::accesscontrol::AccessControlComponent::Event",
              "kind": "flat"
            },
            {
              "name": "Minted",
              "type": "evolute_duel::systems::tokens::evlt_token::evlt_token::Minted",
              "kind": "nested"
            },
            {
              "name": "Burned",
              "type": "evolute_duel::systems::tokens::evlt_token::evlt_token::Burned",
              "kind": "nested"
            },
            {
              "name": "SRC5Event",
              "type": "openzeppelin_introspection::src5::SRC5Component::Event",
              "kind": "flat"
            }
          ]
        }
      ],
      "init_calldata": [
        "0x03ec6d1529f9bfe10dfd841453f9cd844b69de963b88af809795b16c91dffd71"
      ],
      "tag": "evolute_duel-evlt_token",
      "selector": "0x4b4f8fc3cb27eb854a6c6473d652ec91691beb5c97797357ac7faf4ed85386d",
      "systems": [
        "dojo_init",
        "mint",
        "burn",
        "set_minter",
        "set_burner",
        "set_transfer_allowed",
        "upgrade",
        "transfer",
        "transfer_from",
        "approve",
        "transferFrom",
        "grant_role",
        "revoke_role",
        "renounce_role",
        "grantRole",
        "revokeRole",
        "renounceRole"
      ]
    },
    {
      "address": "0x16a6004c1da35e5d61402cb5eaab537f9378f96c93b7231872307f8a3e87698",
      "class_hash": "0x68a3b6bdb4f9305b278e3a82a91c2d12169e9dcba86e9bc75620bb5a5e2e7ae",
      "abi": [
        {
          "type": "impl",
          "name": "evlt_topup__ContractImpl",
          "interface_name": "dojo::contract::interface::IContract"
        },
        {
          "type": "interface",
          "name": "dojo::contract::interface::IContract",
          "items": []
        },
        {
          "type": "impl",
          "name": "evlt_topup__DeployedContractImpl",
          "interface_name": "dojo::meta::interface::IDeployedResource"
        },
        {
          "type": "struct",
          "name": "core::byte_array::ByteArray",
          "members": [
            {
              "name": "data",
              "type": "core::array::Array::<core::bytes_31::bytes31>"
            },
            {
              "name": "pending_word",
              "type": "core::felt252"
            },
            {
              "name": "pending_word_len",
              "type": "core::integer::u32"
            }
          ]
        },
        {
          "type": "interface",
          "name": "dojo::meta::interface::IDeployedResource",
          "items": [
            {
              "type": "function",
              "name": "dojo_name",
              "inputs": [],
              "outputs": [
                {
                  "type": "core::byte_array::ByteArray"
                }
              ],
              "state_mutability": "view"
            }
          ]
        },
        {
          "type": "function",
          "name": "dojo_init",
          "inputs": [
            {
              "name": "admin_address",
              "type": "core::starknet::contract_address::ContractAddress"
            }
          ],
          "outputs": [],
          "state_mutability": "external"
        },
        {
          "type": "impl",
          "name": "TopUpImpl",
          "interface_name": "evolute_duel::systems::evlt_topup::ITopUp"
        },
        {
          "type": "struct",
          "name": "core::integer::u256",
          "members": [
            {
              "name": "low",
              "type": "core::integer::u128"
            },
            {
              "name": "high",
              "type": "core::integer::u128"
            }
          ]
        },
        {
          "type": "struct",
          "name": "core::array::Span::<core::starknet::contract_address::ContractAddress>",
          "members": [
            {
              "name": "snapshot",
              "type": "@core::array::Array::<core::starknet::contract_address::ContractAddress>"
            }
          ]
        },
        {
          "type": "struct",
          "name": "core::array::Span::<core::integer::u256>",
          "members": [
            {
              "name": "snapshot",
              "type": "@core::array::Array::<core::integer::u256>"
            }
          ]
        },
        {
          "type": "struct",
          "name": "core::array::Span::<core::integer::u64>",
          "members": [
            {
              "name": "snapshot",
              "type": "@core::array::Array::<core::integer::u64>"
            }
          ]
        },
        {
          "type": "interface",
          "name": "evolute_duel::systems::evlt_topup::ITopUp",
          "items": [
            {
              "type": "function",
              "name": "mint_evlt",
              "inputs": [
                {
                  "name": "user",
                  "type": "core::starknet::contract_address::ContractAddress"
                },
                {
                  "name": "amount",
                  "type": "core::integer::u256"
                },
                {
                  "name": "source",
                  "type": "core::felt252"
                }
              ],
              "outputs": [],
              "state_mutability": "external"
            },
            {
              "type": "function",
              "name": "mint_evlt_batch",
              "inputs": [
                {
                  "name": "users",
                  "type": "core::array::Span::<core::starknet::contract_address::ContractAddress>"
                },
                {
                  "name": "amounts",
                  "type": "core::array::Span::<core::integer::u256>"
                },
                {
                  "name": "source",
                  "type": "core::felt252"
                }
              ],
              "outputs": [],
              "state_mutability": "external"
            },
            {
              "type": "function",
              "name": "get_topup_history",
              "inputs": [
                {
                  "name": "user",
                  "type": "core::starknet::contract_address::ContractAddress"
                }
              ],
              "outputs": [
                {
                  "type": "(core::array::Span::<core::integer::u256>, core::array::Span::<core::integer::u64>)"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "get_total_topups",
              "inputs": [
                {
                  "name": "user",
                  "type": "core::starknet::contract_address::ContractAddress"
                }
              ],
              "outputs": [
                {
                  "type": "core::integer::u256"
                }
              ],
              "state_mutability": "view"
            }
          ]
        },
        {
          "type": "impl",
          "name": "AdminImpl",
          "interface_name": "evolute_duel::systems::evlt_topup::ITopUpAdmin"
        },
        {
          "type": "interface",
          "name": "evolute_duel::systems::evlt_topup::ITopUpAdmin",
          "items": [
            {
              "type": "function",
              "name": "grant_minter_role",
              "inputs": [
                {
                  "name": "account",
                  "type": "core::starknet::contract_address::ContractAddress"
                }
              ],
              "outputs": [],
              "state_mutability": "external"
            },
            {
              "type": "function",
              "name": "revoke_minter_role",
              "inputs": [
                {
                  "name": "account",
                  "type": "core::starknet::contract_address::ContractAddress"
                }
              ],
              "outputs": [],
              "state_mutability": "external"
            }
          ]
        },
        {
          "type": "impl",
          "name": "WorldProviderImpl",
          "interface_name": "dojo::contract::components::world_provider::IWorldProvider"
        },
        {
          "type": "struct",
          "name": "dojo::world::iworld::IWorldDispatcher",
          "members": [
            {
              "name": "contract_address",
              "type": "core::starknet::contract_address::ContractAddress"
            }
          ]
        },
        {
          "type": "interface",
          "name": "dojo::contract::components::world_provider::IWorldProvider",
          "items": [
            {
              "type": "function",
              "name": "world_dispatcher",
              "inputs": [],
              "outputs": [
                {
                  "type": "dojo::world::iworld::IWorldDispatcher"
                }
              ],
              "state_mutability": "view"
            }
          ]
        },
        {
          "type": "impl",
          "name": "UpgradeableImpl",
          "interface_name": "dojo::contract::components::upgradeable::IUpgradeable"
        },
        {
          "type": "interface",
          "name": "dojo::contract::components::upgradeable::IUpgradeable",
          "items": [
            {
              "type": "function",
              "name": "upgrade",
              "inputs": [
                {
                  "name": "new_class_hash",
                  "type": "core::starknet::class_hash::ClassHash"
                }
              ],
              "outputs": [],
              "state_mutability": "external"
            }
          ]
        },
        {
          "type": "impl",
          "name": "AccessControlMixinImpl",
          "interface_name": "openzeppelin_access::accesscontrol::interface::AccessControlABI"
        },
        {
          "type": "enum",
          "name": "core::bool",
          "variants": [
            {
              "name": "False",
              "type": "()"
            },
            {
              "name": "True",
              "type": "()"
            }
          ]
        },
        {
          "type": "interface",
          "name": "openzeppelin_access::accesscontrol::interface::AccessControlABI",
          "items": [
            {
              "type": "function",
              "name": "has_role",
              "inputs": [
                {
                  "name": "role",
                  "type": "core::felt252"
                },
                {
                  "name": "account",
                  "type": "core::starknet::contract_address::ContractAddress"
                }
              ],
              "outputs": [
                {
                  "type": "core::bool"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "get_role_admin",
              "inputs": [
                {
                  "name": "role",
                  "type": "core::felt252"
                }
              ],
              "outputs": [
                {
                  "type": "core::felt252"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "grant_role",
              "inputs": [
                {
                  "name": "role",
                  "type": "core::felt252"
                },
                {
                  "name": "account",
                  "type": "core::starknet::contract_address::ContractAddress"
                }
              ],
              "outputs": [],
              "state_mutability": "external"
            },
            {
              "type": "function",
              "name": "revoke_role",
              "inputs": [
                {
                  "name": "role",
                  "type": "core::felt252"
                },
                {
                  "name": "account",
                  "type": "core::starknet::contract_address::ContractAddress"
                }
              ],
              "outputs": [],
              "state_mutability": "external"
            },
            {
              "type": "function",
              "name": "renounce_role",
              "inputs": [
                {
                  "name": "role",
                  "type": "core::felt252"
                },
                {
                  "name": "account",
                  "type": "core::starknet::contract_address::ContractAddress"
                }
              ],
              "outputs": [],
              "state_mutability": "external"
            },
            {
              "type": "function",
              "name": "hasRole",
              "inputs": [
                {
                  "name": "role",
                  "type": "core::felt252"
                },
                {
                  "name": "account",
                  "type": "core::starknet::contract_address::ContractAddress"
                }
              ],
              "outputs": [
                {
                  "type": "core::bool"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "getRoleAdmin",
              "inputs": [
                {
                  "name": "role",
                  "type": "core::felt252"
                }
              ],
              "outputs": [
                {
                  "type": "core::felt252"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "grantRole",
              "inputs": [
                {
                  "name": "role",
                  "type": "core::felt252"
                },
                {
                  "name": "account",
                  "type": "core::starknet::contract_address::ContractAddress"
                }
              ],
              "outputs": [],
              "state_mutability": "external"
            },
            {
              "type": "function",
              "name": "revokeRole",
              "inputs": [
                {
                  "name": "role",
                  "type": "core::felt252"
                },
                {
                  "name": "account",
                  "type": "core::starknet::contract_address::ContractAddress"
                }
              ],
              "outputs": [],
              "state_mutability": "external"
            },
            {
              "type": "function",
              "name": "renounceRole",
              "inputs": [
                {
                  "name": "role",
                  "type": "core::felt252"
                },
                {
                  "name": "account",
                  "type": "core::starknet::contract_address::ContractAddress"
                }
              ],
              "outputs": [],
              "state_mutability": "external"
            },
            {
              "type": "function",
              "name": "supports_interface",
              "inputs": [
                {
                  "name": "interface_id",
                  "type": "core::felt252"
                }
              ],
              "outputs": [
                {
                  "type": "core::bool"
                }
              ],
              "state_mutability": "view"
            }
          ]
        },
        {
          "type": "constructor",
          "name": "constructor",
          "inputs": []
        },
        {
          "type": "event",
          "name": "dojo::contract::components::upgradeable::upgradeable_cpt::Upgraded",
          "kind": "struct",
          "members": [
            {
              "name": "class_hash",
              "type": "core::starknet::class_hash::ClassHash",
              "kind": "data"
            }
          ]
        },
        {
          "type": "event",
          "name": "dojo::contract::components::upgradeable::upgradeable_cpt::Event",
          "kind": "enum",
          "variants": [
            {
              "name": "Upgraded",
              "type": "dojo::contract::components::upgradeable::upgradeable_cpt::Upgraded",
              "kind": "nested"
            }
          ]
        },
        {
          "type": "event",
          "name": "dojo::contract::components::world_provider::world_provider_cpt::Event",
          "kind": "enum",
          "variants": []
        },
        {
          "type": "event",
          "name": "openzeppelin_access::accesscontrol::accesscontrol::AccessControlComponent::RoleGranted",
          "kind": "struct",
          "members": [
            {
              "name": "role",
              "type": "core::felt252",
              "kind": "data"
            },
            {
              "name": "account",
              "type": "core::starknet::contract_address::ContractAddress",
              "kind": "data"
            },
            {
              "name": "sender",
              "type": "core::starknet::contract_address::ContractAddress",
              "kind": "data"
            }
          ]
        },
        {
          "type": "event",
          "name": "openzeppelin_access::accesscontrol::accesscontrol::AccessControlComponent::RoleRevoked",
          "kind": "struct",
          "members": [
            {
              "name": "role",
              "type": "core::felt252",
              "kind": "data"
            },
            {
              "name": "account",
              "type": "core::starknet::contract_address::ContractAddress",
              "kind": "data"
            },
            {
              "name": "sender",
              "type": "core::starknet::contract_address::ContractAddress",
              "kind": "data"
            }
          ]
        },
        {
          "type": "event",
          "name": "openzeppelin_access::accesscontrol::accesscontrol::AccessControlComponent::RoleAdminChanged",
          "kind": "struct",
          "members": [
            {
              "name": "role",
              "type": "core::felt252",
              "kind": "data"
            },
            {
              "name": "previous_admin_role",
              "type": "core::felt252",
              "kind": "data"
            },
            {
              "name": "new_admin_role",
              "type": "core::felt252",
              "kind": "data"
            }
          ]
        },
        {
          "type": "event",
          "name": "openzeppelin_access::accesscontrol::accesscontrol::AccessControlComponent::Event",
          "kind": "enum",
          "variants": [
            {
              "name": "RoleGranted",
              "type": "openzeppelin_access::accesscontrol::accesscontrol::AccessControlComponent::RoleGranted",
              "kind": "nested"
            },
            {
              "name": "RoleRevoked",
              "type": "openzeppelin_access::accesscontrol::accesscontrol::AccessControlComponent::RoleRevoked",
              "kind": "nested"
            },
            {
              "name": "RoleAdminChanged",
              "type": "openzeppelin_access::accesscontrol::accesscontrol::AccessControlComponent::RoleAdminChanged",
              "kind": "nested"
            }
          ]
        },
        {
          "type": "event",
          "name": "openzeppelin_introspection::src5::SRC5Component::Event",
          "kind": "enum",
          "variants": []
        },
        {
          "type": "event",
          "name": "evolute_duel::systems::evlt_topup::evlt_topup::EVLTMinted",
          "kind": "struct",
          "members": [
            {
              "name": "user",
              "type": "core::starknet::contract_address::ContractAddress",
              "kind": "key"
            },
            {
              "name": "amount",
              "type": "core::integer::u256",
              "kind": "data"
            },
            {
              "name": "source",
              "type": "core::felt252",
              "kind": "data"
            },
            {
              "name": "timestamp",
              "type": "core::integer::u64",
              "kind": "data"
            },
            {
              "name": "admin",
              "type": "core::starknet::contract_address::ContractAddress",
              "kind": "data"
            }
          ]
        },
        {
          "type": "event",
          "name": "evolute_duel::systems::evlt_topup::evlt_topup::EVLTBatchMinted",
          "kind": "struct",
          "members": [
            {
              "name": "users",
              "type": "core::array::Span::<core::starknet::contract_address::ContractAddress>",
              "kind": "data"
            },
            {
              "name": "amounts",
              "type": "core::array::Span::<core::integer::u256>",
              "kind": "data"
            },
            {
              "name": "source",
              "type": "core::felt252",
              "kind": "data"
            },
            {
              "name": "timestamp",
              "type": "core::integer::u64",
              "kind": "data"
            },
            {
              "name": "admin",
              "type": "core::starknet::contract_address::ContractAddress",
              "kind": "data"
            },
            {
              "name": "total_amount",
              "type": "core::integer::u256",
              "kind": "data"
            }
          ]
        },
        {
          "type": "event",
          "name": "evolute_duel::systems::evlt_topup::evlt_topup::Event",
          "kind": "enum",
          "variants": [
            {
              "name": "UpgradeableEvent",
              "type": "dojo::contract::components::upgradeable::upgradeable_cpt::Event",
              "kind": "nested"
            },
            {
              "name": "WorldProviderEvent",
              "type": "dojo::contract::components::world_provider::world_provider_cpt::Event",
              "kind": "nested"
            },
            {
              "name": "AccessControlEvent",
              "type": "openzeppelin_access::accesscontrol::accesscontrol::AccessControlComponent::Event",
              "kind": "flat"
            },
            {
              "name": "SRC5Event",
              "type": "openzeppelin_introspection::src5::SRC5Component::Event",
              "kind": "flat"
            },
            {
              "name": "EVLTMinted",
              "type": "evolute_duel::systems::evlt_topup::evlt_topup::EVLTMinted",
              "kind": "nested"
            },
            {
              "name": "EVLTBatchMinted",
              "type": "evolute_duel::systems::evlt_topup::evlt_topup::EVLTBatchMinted",
              "kind": "nested"
            }
          ]
        }
      ],
      "init_calldata": [
        "0x03ec6d1529f9bfe10dfd841453f9cd844b69de963b88af809795b16c91dffd71"
      ],
      "tag": "evolute_duel-evlt_topup",
      "selector": "0x12d81e487802993615193a5778814bfe6e8c9efb6c1153720d79b5a478ed8ff",
      "systems": [
        "dojo_init",
        "mint_evlt",
        "mint_evlt_batch",
        "grant_minter_role",
        "revoke_minter_role",
        "upgrade",
        "grant_role",
        "revoke_role",
        "renounce_role",
        "grantRole",
        "revokeRole",
        "renounceRole"
      ]
    },
    {
      "address": "0x5eee74184c351e4218e9050653f118b169a9c999e40ea5c430f1371658cf403",
      "class_hash": "0x36ca87d62aa9ed5606ebdf06c6b97a6e94314749e53282510d3137eced983a7",
      "abi": [
        {
          "type": "impl",
          "name": "game__ContractImpl",
          "interface_name": "dojo::contract::interface::IContract"
        },
        {
          "type": "interface",
          "name": "dojo::contract::interface::IContract",
          "items": []
        },
        {
          "type": "impl",
          "name": "game__DeployedContractImpl",
          "interface_name": "dojo::meta::interface::IDeployedResource"
        },
        {
          "type": "struct",
          "name": "core::byte_array::ByteArray",
          "members": [
            {
              "name": "data",
              "type": "core::array::Array::<core::bytes_31::bytes31>"
            },
            {
              "name": "pending_word",
              "type": "core::felt252"
            },
            {
              "name": "pending_word_len",
              "type": "core::integer::u32"
            }
          ]
        },
        {
          "type": "interface",
          "name": "dojo::meta::interface::IDeployedResource",
          "items": [
            {
              "type": "function",
              "name": "dojo_name",
              "inputs": [],
              "outputs": [
                {
                  "type": "core::byte_array::ByteArray"
                }
              ],
              "state_mutability": "view"
            }
          ]
        },
        {
          "type": "function",
          "name": "dojo_init",
          "inputs": [],
          "outputs": [],
          "state_mutability": "view"
        },
        {
          "type": "impl",
          "name": "GameImpl",
          "interface_name": "evolute_duel::systems::game::IGame"
        },
        {
          "type": "struct",
          "name": "core::array::Span::<core::integer::u32>",
          "members": [
            {
              "name": "snapshot",
              "type": "@core::array::Array::<core::integer::u32>"
            }
          ]
        },
        {
          "type": "enum",
          "name": "core::option::Option::<core::integer::u8>",
          "variants": [
            {
              "name": "Some",
              "type": "core::integer::u8"
            },
            {
              "name": "None",
              "type": "()"
            }
          ]
        },
        {
          "type": "interface",
          "name": "evolute_duel::systems::game::IGame",
          "items": [
            {
              "type": "function",
              "name": "commit_tiles",
              "inputs": [
                {
                  "name": "commitments",
                  "type": "core::array::Span::<core::integer::u32>"
                }
              ],
              "outputs": [],
              "state_mutability": "external"
            },
            {
              "type": "function",
              "name": "reveal_tile",
              "inputs": [
                {
                  "name": "tile_index",
                  "type": "core::integer::u8"
                },
                {
                  "name": "nonce",
                  "type": "core::felt252"
                },
                {
                  "name": "c",
                  "type": "core::integer::u8"
                }
              ],
              "outputs": [],
              "state_mutability": "external"
            },
            {
              "type": "function",
              "name": "request_next_tile",
              "inputs": [
                {
                  "name": "tile_index",
                  "type": "core::integer::u8"
                },
                {
                  "name": "nonce",
                  "type": "core::felt252"
                },
                {
                  "name": "c",
                  "type": "core::integer::u8"
                }
              ],
              "outputs": [],
              "state_mutability": "external"
            },
            {
              "type": "function",
              "name": "make_move",
              "inputs": [
                {
                  "name": "joker_tile",
                  "type": "core::option::Option::<core::integer::u8>"
                },
                {
                  "name": "rotation",
                  "type": "core::integer::u8"
                },
                {
                  "name": "col",
                  "type": "core::integer::u8"
                },
                {
                  "name": "row",
                  "type": "core::integer::u8"
                }
              ],
              "outputs": [],
              "state_mutability": "external"
            },
            {
              "type": "function",
              "name": "skip_move",
              "inputs": [],
              "outputs": [],
              "state_mutability": "external"
            },
            {
              "type": "function",
              "name": "finish_game",
              "inputs": [
                {
                  "name": "board_id",
                  "type": "core::felt252"
                }
              ],
              "outputs": [],
              "state_mutability": "external"
            }
          ]
        },
        {
          "type": "impl",
          "name": "WorldProviderImpl",
          "interface_name": "dojo::contract::components::world_provider::IWorldProvider"
        },
        {
          "type": "struct",
          "name": "dojo::world::iworld::IWorldDispatcher",
          "members": [
            {
              "name": "contract_address",
              "type": "core::starknet::contract_address::ContractAddress"
            }
          ]
        },
        {
          "type": "interface",
          "name": "dojo::contract::components::world_provider::IWorldProvider",
          "items": [
            {
              "type": "function",
              "name": "world_dispatcher",
              "inputs": [],
              "outputs": [
                {
                  "type": "dojo::world::iworld::IWorldDispatcher"
                }
              ],
              "state_mutability": "view"
            }
          ]
        },
        {
          "type": "impl",
          "name": "UpgradeableImpl",
          "interface_name": "dojo::contract::components::upgradeable::IUpgradeable"
        },
        {
          "type": "interface",
          "name": "dojo::contract::components::upgradeable::IUpgradeable",
          "items": [
            {
              "type": "function",
              "name": "upgrade",
              "inputs": [
                {
                  "name": "new_class_hash",
                  "type": "core::starknet::class_hash::ClassHash"
                }
              ],
              "outputs": [],
              "state_mutability": "external"
            }
          ]
        },
        {
          "type": "constructor",
          "name": "constructor",
          "inputs": []
        },
        {
          "type": "event",
          "name": "dojo::contract::components::upgradeable::upgradeable_cpt::Upgraded",
          "kind": "struct",
          "members": [
            {
              "name": "class_hash",
              "type": "core::starknet::class_hash::ClassHash",
              "kind": "data"
            }
          ]
        },
        {
          "type": "event",
          "name": "dojo::contract::components::upgradeable::upgradeable_cpt::Event",
          "kind": "enum",
          "variants": [
            {
              "name": "Upgraded",
              "type": "dojo::contract::components::upgradeable::upgradeable_cpt::Upgraded",
              "kind": "nested"
            }
          ]
        },
        {
          "type": "event",
          "name": "dojo::contract::components::world_provider::world_provider_cpt::Event",
          "kind": "enum",
          "variants": []
        },
        {
          "type": "event",
          "name": "achievement::components::achievable::AchievableComponent::Event",
          "kind": "enum",
          "variants": []
        },
        {
          "type": "event",
          "name": "evolute_duel::systems::game::game::Event",
          "kind": "enum",
          "variants": [
            {
              "name": "UpgradeableEvent",
              "type": "dojo::contract::components::upgradeable::upgradeable_cpt::Event",
              "kind": "nested"
            },
            {
              "name": "WorldProviderEvent",
              "type": "dojo::contract::components::world_provider::world_provider_cpt::Event",
              "kind": "nested"
            },
            {
              "name": "AchievableEvent",
              "type": "achievement::components::achievable::AchievableComponent::Event",
              "kind": "flat"
            }
          ]
        }
      ],
      "init_calldata": [],
      "tag": "evolute_duel-game",
      "selector": "0x2b4049d066282ff61972bb48825bbc8e659093daca9c85ab956befe2feaa91b",
      "systems": [
        "commit_tiles",
        "reveal_tile",
        "request_next_tile",
        "make_move",
        "skip_move",
        "finish_game",
        "upgrade"
      ]
    },
    {
      "address": "0x49b412d0126d673ff4ec30d6730262fa1ea78f49f2cc50410aaf93ae30330ce",
      "class_hash": "0x4ed1605d38c661cee5e44b53acc835ef78ff5f4f5e89bbc9b1adcc24d847f82",
      "abi": [
        {
          "type": "impl",
          "name": "grnd_token__ContractImpl",
          "interface_name": "dojo::contract::interface::IContract"
        },
        {
          "type": "interface",
          "name": "dojo::contract::interface::IContract",
          "items": []
        },
        {
          "type": "impl",
          "name": "grnd_token__DeployedContractImpl",
          "interface_name": "dojo::meta::interface::IDeployedResource"
        },
        {
          "type": "struct",
          "name": "core::byte_array::ByteArray",
          "members": [
            {
              "name": "data",
              "type": "core::array::Array::<core::bytes_31::bytes31>"
            },
            {
              "name": "pending_word",
              "type": "core::felt252"
            },
            {
              "name": "pending_word_len",
              "type": "core::integer::u32"
            }
          ]
        },
        {
          "type": "interface",
          "name": "dojo::meta::interface::IDeployedResource",
          "items": [
            {
              "type": "function",
              "name": "dojo_name",
              "inputs": [],
              "outputs": [
                {
                  "type": "core::byte_array::ByteArray"
                }
              ],
              "state_mutability": "view"
            }
          ]
        },
        {
          "type": "function",
          "name": "dojo_init",
          "inputs": [
            {
              "name": "admin_address",
              "type": "core::starknet::contract_address::ContractAddress"
            }
          ],
          "outputs": [],
          "state_mutability": "external"
        },
        {
          "type": "impl",
          "name": "GrndTokenProtectedImpl",
          "interface_name": "evolute_duel::systems::tokens::grnd_token::IGrndTokenProtected"
        },
        {
          "type": "struct",
          "name": "core::integer::u256",
          "members": [
            {
              "name": "low",
              "type": "core::integer::u128"
            },
            {
              "name": "high",
              "type": "core::integer::u128"
            }
          ]
        },
        {
          "type": "interface",
          "name": "evolute_duel::systems::tokens::grnd_token::IGrndTokenProtected",
          "items": [
            {
              "type": "function",
              "name": "mint",
              "inputs": [
                {
                  "name": "recipient",
                  "type": "core::starknet::contract_address::ContractAddress"
                },
                {
                  "name": "amount",
                  "type": "core::integer::u256"
                }
              ],
              "outputs": [],
              "state_mutability": "external"
            },
            {
              "type": "function",
              "name": "burn",
              "inputs": [
                {
                  "name": "from",
                  "type": "core::starknet::contract_address::ContractAddress"
                },
                {
                  "name": "amount",
                  "type": "core::integer::u256"
                }
              ],
              "outputs": [],
              "state_mutability": "external"
            },
            {
              "type": "function",
              "name": "reward_player",
              "inputs": [
                {
                  "name": "player_address",
                  "type": "core::starknet::contract_address::ContractAddress"
                },
                {
                  "name": "amount",
                  "type": "core::integer::u128"
                }
              ],
              "outputs": [],
              "state_mutability": "external"
            },
            {
              "type": "function",
              "name": "set_minter",
              "inputs": [
                {
                  "name": "minter_address",
                  "type": "core::starknet::contract_address::ContractAddress"
                }
              ],
              "outputs": [],
              "state_mutability": "external"
            },
            {
              "type": "function",
              "name": "set_burner",
              "inputs": [
                {
                  "name": "burner_address",
                  "type": "core::starknet::contract_address::ContractAddress"
                }
              ],
              "outputs": [],
              "state_mutability": "external"
            }
          ]
        },
        {
          "type": "impl",
          "name": "WorldProviderImpl",
          "interface_name": "dojo::contract::components::world_provider::IWorldProvider"
        },
        {
          "type": "struct",
          "name": "dojo::world::iworld::IWorldDispatcher",
          "members": [
            {
              "name": "contract_address",
              "type": "core::starknet::contract_address::ContractAddress"
            }
          ]
        },
        {
          "type": "interface",
          "name": "dojo::contract::components::world_provider::IWorldProvider",
          "items": [
            {
              "type": "function",
              "name": "world_dispatcher",
              "inputs": [],
              "outputs": [
                {
                  "type": "dojo::world::iworld::IWorldDispatcher"
                }
              ],
              "state_mutability": "view"
            }
          ]
        },
        {
          "type": "impl",
          "name": "UpgradeableImpl",
          "interface_name": "dojo::contract::components::upgradeable::IUpgradeable"
        },
        {
          "type": "interface",
          "name": "dojo::contract::components::upgradeable::IUpgradeable",
          "items": [
            {
              "type": "function",
              "name": "upgrade",
              "inputs": [
                {
                  "name": "new_class_hash",
                  "type": "core::starknet::class_hash::ClassHash"
                }
              ],
              "outputs": [],
              "state_mutability": "external"
            }
          ]
        },
        {
          "type": "impl",
          "name": "ERC20MixinImpl",
          "interface_name": "openzeppelin_token::erc20::interface::IERC20Mixin"
        },
        {
          "type": "enum",
          "name": "core::bool",
          "variants": [
            {
              "name": "False",
              "type": "()"
            },
            {
              "name": "True",
              "type": "()"
            }
          ]
        },
        {
          "type": "interface",
          "name": "openzeppelin_token::erc20::interface::IERC20Mixin",
          "items": [
            {
              "type": "function",
              "name": "total_supply",
              "inputs": [],
              "outputs": [
                {
                  "type": "core::integer::u256"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "balance_of",
              "inputs": [
                {
                  "name": "account",
                  "type": "core::starknet::contract_address::ContractAddress"
                }
              ],
              "outputs": [
                {
                  "type": "core::integer::u256"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "allowance",
              "inputs": [
                {
                  "name": "owner",
                  "type": "core::starknet::contract_address::ContractAddress"
                },
                {
                  "name": "spender",
                  "type": "core::starknet::contract_address::ContractAddress"
                }
              ],
              "outputs": [
                {
                  "type": "core::integer::u256"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "transfer",
              "inputs": [
                {
                  "name": "recipient",
                  "type": "core::starknet::contract_address::ContractAddress"
                },
                {
                  "name": "amount",
                  "type": "core::integer::u256"
                }
              ],
              "outputs": [
                {
                  "type": "core::bool"
                }
              ],
              "state_mutability": "external"
            },
            {
              "type": "function",
              "name": "transfer_from",
              "inputs": [
                {
                  "name": "sender",
                  "type": "core::starknet::contract_address::ContractAddress"
                },
                {
                  "name": "recipient",
                  "type": "core::starknet::contract_address::ContractAddress"
                },
                {
                  "name": "amount",
                  "type": "core::integer::u256"
                }
              ],
              "outputs": [
                {
                  "type": "core::bool"
                }
              ],
              "state_mutability": "external"
            },
            {
              "type": "function",
              "name": "approve",
              "inputs": [
                {
                  "name": "spender",
                  "type": "core::starknet::contract_address::ContractAddress"
                },
                {
                  "name": "amount",
                  "type": "core::integer::u256"
                }
              ],
              "outputs": [
                {
                  "type": "core::bool"
                }
              ],
              "state_mutability": "external"
            },
            {
              "type": "function",
              "name": "name",
              "inputs": [],
              "outputs": [
                {
                  "type": "core::byte_array::ByteArray"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "symbol",
              "inputs": [],
              "outputs": [
                {
                  "type": "core::byte_array::ByteArray"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "decimals",
              "inputs": [],
              "outputs": [
                {
                  "type": "core::integer::u8"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "totalSupply",
              "inputs": [],
              "outputs": [
                {
                  "type": "core::integer::u256"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "balanceOf",
              "inputs": [
                {
                  "name": "account",
                  "type": "core::starknet::contract_address::ContractAddress"
                }
              ],
              "outputs": [
                {
                  "type": "core::integer::u256"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "transferFrom",
              "inputs": [
                {
                  "name": "sender",
                  "type": "core::starknet::contract_address::ContractAddress"
                },
                {
                  "name": "recipient",
                  "type": "core::starknet::contract_address::ContractAddress"
                },
                {
                  "name": "amount",
                  "type": "core::integer::u256"
                }
              ],
              "outputs": [
                {
                  "type": "core::bool"
                }
              ],
              "state_mutability": "external"
            }
          ]
        },
        {
          "type": "impl",
          "name": "AccessControlMixinImpl",
          "interface_name": "openzeppelin_access::accesscontrol::interface::AccessControlABI"
        },
        {
          "type": "interface",
          "name": "openzeppelin_access::accesscontrol::interface::AccessControlABI",
          "items": [
            {
              "type": "function",
              "name": "has_role",
              "inputs": [
                {
                  "name": "role",
                  "type": "core::felt252"
                },
                {
                  "name": "account",
                  "type": "core::starknet::contract_address::ContractAddress"
                }
              ],
              "outputs": [
                {
                  "type": "core::bool"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "get_role_admin",
              "inputs": [
                {
                  "name": "role",
                  "type": "core::felt252"
                }
              ],
              "outputs": [
                {
                  "type": "core::felt252"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "grant_role",
              "inputs": [
                {
                  "name": "role",
                  "type": "core::felt252"
                },
                {
                  "name": "account",
                  "type": "core::starknet::contract_address::ContractAddress"
                }
              ],
              "outputs": [],
              "state_mutability": "external"
            },
            {
              "type": "function",
              "name": "revoke_role",
              "inputs": [
                {
                  "name": "role",
                  "type": "core::felt252"
                },
                {
                  "name": "account",
                  "type": "core::starknet::contract_address::ContractAddress"
                }
              ],
              "outputs": [],
              "state_mutability": "external"
            },
            {
              "type": "function",
              "name": "renounce_role",
              "inputs": [
                {
                  "name": "role",
                  "type": "core::felt252"
                },
                {
                  "name": "account",
                  "type": "core::starknet::contract_address::ContractAddress"
                }
              ],
              "outputs": [],
              "state_mutability": "external"
            },
            {
              "type": "function",
              "name": "hasRole",
              "inputs": [
                {
                  "name": "role",
                  "type": "core::felt252"
                },
                {
                  "name": "account",
                  "type": "core::starknet::contract_address::ContractAddress"
                }
              ],
              "outputs": [
                {
                  "type": "core::bool"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "getRoleAdmin",
              "inputs": [
                {
                  "name": "role",
                  "type": "core::felt252"
                }
              ],
              "outputs": [
                {
                  "type": "core::felt252"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "grantRole",
              "inputs": [
                {
                  "name": "role",
                  "type": "core::felt252"
                },
                {
                  "name": "account",
                  "type": "core::starknet::contract_address::ContractAddress"
                }
              ],
              "outputs": [],
              "state_mutability": "external"
            },
            {
              "type": "function",
              "name": "revokeRole",
              "inputs": [
                {
                  "name": "role",
                  "type": "core::felt252"
                },
                {
                  "name": "account",
                  "type": "core::starknet::contract_address::ContractAddress"
                }
              ],
              "outputs": [],
              "state_mutability": "external"
            },
            {
              "type": "function",
              "name": "renounceRole",
              "inputs": [
                {
                  "name": "role",
                  "type": "core::felt252"
                },
                {
                  "name": "account",
                  "type": "core::starknet::contract_address::ContractAddress"
                }
              ],
              "outputs": [],
              "state_mutability": "external"
            },
            {
              "type": "function",
              "name": "supports_interface",
              "inputs": [
                {
                  "name": "interface_id",
                  "type": "core::felt252"
                }
              ],
              "outputs": [
                {
                  "type": "core::bool"
                }
              ],
              "state_mutability": "view"
            }
          ]
        },
        {
          "type": "constructor",
          "name": "constructor",
          "inputs": []
        },
        {
          "type": "event",
          "name": "dojo::contract::components::upgradeable::upgradeable_cpt::Upgraded",
          "kind": "struct",
          "members": [
            {
              "name": "class_hash",
              "type": "core::starknet::class_hash::ClassHash",
              "kind": "data"
            }
          ]
        },
        {
          "type": "event",
          "name": "dojo::contract::components::upgradeable::upgradeable_cpt::Event",
          "kind": "enum",
          "variants": [
            {
              "name": "Upgraded",
              "type": "dojo::contract::components::upgradeable::upgradeable_cpt::Upgraded",
              "kind": "nested"
            }
          ]
        },
        {
          "type": "event",
          "name": "dojo::contract::components::world_provider::world_provider_cpt::Event",
          "kind": "enum",
          "variants": []
        },
        {
          "type": "event",
          "name": "openzeppelin_token::erc20::erc20::ERC20Component::Transfer",
          "kind": "struct",
          "members": [
            {
              "name": "from",
              "type": "core::starknet::contract_address::ContractAddress",
              "kind": "key"
            },
            {
              "name": "to",
              "type": "core::starknet::contract_address::ContractAddress",
              "kind": "key"
            },
            {
              "name": "value",
              "type": "core::integer::u256",
              "kind": "data"
            }
          ]
        },
        {
          "type": "event",
          "name": "openzeppelin_token::erc20::erc20::ERC20Component::Approval",
          "kind": "struct",
          "members": [
            {
              "name": "owner",
              "type": "core::starknet::contract_address::ContractAddress",
              "kind": "key"
            },
            {
              "name": "spender",
              "type": "core::starknet::contract_address::ContractAddress",
              "kind": "key"
            },
            {
              "name": "value",
              "type": "core::integer::u256",
              "kind": "data"
            }
          ]
        },
        {
          "type": "event",
          "name": "openzeppelin_token::erc20::erc20::ERC20Component::Event",
          "kind": "enum",
          "variants": [
            {
              "name": "Transfer",
              "type": "openzeppelin_token::erc20::erc20::ERC20Component::Transfer",
              "kind": "nested"
            },
            {
              "name": "Approval",
              "type": "openzeppelin_token::erc20::erc20::ERC20Component::Approval",
              "kind": "nested"
            }
          ]
        },
        {
          "type": "event",
          "name": "openzeppelin_access::accesscontrol::accesscontrol::AccessControlComponent::RoleGranted",
          "kind": "struct",
          "members": [
            {
              "name": "role",
              "type": "core::felt252",
              "kind": "data"
            },
            {
              "name": "account",
              "type": "core::starknet::contract_address::ContractAddress",
              "kind": "data"
            },
            {
              "name": "sender",
              "type": "core::starknet::contract_address::ContractAddress",
              "kind": "data"
            }
          ]
        },
        {
          "type": "event",
          "name": "openzeppelin_access::accesscontrol::accesscontrol::AccessControlComponent::RoleRevoked",
          "kind": "struct",
          "members": [
            {
              "name": "role",
              "type": "core::felt252",
              "kind": "data"
            },
            {
              "name": "account",
              "type": "core::starknet::contract_address::ContractAddress",
              "kind": "data"
            },
            {
              "name": "sender",
              "type": "core::starknet::contract_address::ContractAddress",
              "kind": "data"
            }
          ]
        },
        {
          "type": "event",
          "name": "openzeppelin_access::accesscontrol::accesscontrol::AccessControlComponent::RoleAdminChanged",
          "kind": "struct",
          "members": [
            {
              "name": "role",
              "type": "core::felt252",
              "kind": "data"
            },
            {
              "name": "previous_admin_role",
              "type": "core::felt252",
              "kind": "data"
            },
            {
              "name": "new_admin_role",
              "type": "core::felt252",
              "kind": "data"
            }
          ]
        },
        {
          "type": "event",
          "name": "openzeppelin_access::accesscontrol::accesscontrol::AccessControlComponent::Event",
          "kind": "enum",
          "variants": [
            {
              "name": "RoleGranted",
              "type": "openzeppelin_access::accesscontrol::accesscontrol::AccessControlComponent::RoleGranted",
              "kind": "nested"
            },
            {
              "name": "RoleRevoked",
              "type": "openzeppelin_access::accesscontrol::accesscontrol::AccessControlComponent::RoleRevoked",
              "kind": "nested"
            },
            {
              "name": "RoleAdminChanged",
              "type": "openzeppelin_access::accesscontrol::accesscontrol::AccessControlComponent::RoleAdminChanged",
              "kind": "nested"
            }
          ]
        },
        {
          "type": "event",
          "name": "openzeppelin_introspection::src5::SRC5Component::Event",
          "kind": "enum",
          "variants": []
        },
        {
          "type": "event",
          "name": "evolute_duel::systems::tokens::grnd_token::grnd_token::Minted",
          "kind": "struct",
          "members": [
            {
              "name": "recipient",
              "type": "core::starknet::contract_address::ContractAddress",
              "kind": "key"
            },
            {
              "name": "amount",
              "type": "core::integer::u256",
              "kind": "data"
            },
            {
              "name": "minter",
              "type": "core::starknet::contract_address::ContractAddress",
              "kind": "data"
            }
          ]
        },
        {
          "type": "event",
          "name": "evolute_duel::systems::tokens::grnd_token::grnd_token::Burned",
          "kind": "struct",
          "members": [
            {
              "name": "from",
              "type": "core::starknet::contract_address::ContractAddress",
              "kind": "key"
            },
            {
              "name": "amount",
              "type": "core::integer::u256",
              "kind": "data"
            },
            {
              "name": "burner",
              "type": "core::starknet::contract_address::ContractAddress",
              "kind": "data"
            }
          ]
        },
        {
          "type": "event",
          "name": "evolute_duel::systems::tokens::grnd_token::grnd_token::PlayerRewarded",
          "kind": "struct",
          "members": [
            {
              "name": "player",
              "type": "core::starknet::contract_address::ContractAddress",
              "kind": "key"
            },
            {
              "name": "amount",
              "type": "core::integer::u128",
              "kind": "data"
            },
            {
              "name": "source",
              "type": "core::starknet::contract_address::ContractAddress",
              "kind": "data"
            }
          ]
        },
        {
          "type": "event",
          "name": "evolute_duel::systems::tokens::grnd_token::grnd_token::Event",
          "kind": "enum",
          "variants": [
            {
              "name": "UpgradeableEvent",
              "type": "dojo::contract::components::upgradeable::upgradeable_cpt::Event",
              "kind": "nested"
            },
            {
              "name": "WorldProviderEvent",
              "type": "dojo::contract::components::world_provider::world_provider_cpt::Event",
              "kind": "nested"
            },
            {
              "name": "ERC20Event",
              "type": "openzeppelin_token::erc20::erc20::ERC20Component::Event",
              "kind": "flat"
            },
            {
              "name": "AccessControlEvent",
              "type": "openzeppelin_access::accesscontrol::accesscontrol::AccessControlComponent::Event",
              "kind": "flat"
            },
            {
              "name": "SRC5Event",
              "type": "openzeppelin_introspection::src5::SRC5Component::Event",
              "kind": "flat"
            },
            {
              "name": "Minted",
              "type": "evolute_duel::systems::tokens::grnd_token::grnd_token::Minted",
              "kind": "nested"
            },
            {
              "name": "Burned",
              "type": "evolute_duel::systems::tokens::grnd_token::grnd_token::Burned",
              "kind": "nested"
            },
            {
              "name": "PlayerRewarded",
              "type": "evolute_duel::systems::tokens::grnd_token::grnd_token::PlayerRewarded",
              "kind": "nested"
            }
          ]
        }
      ],
      "init_calldata": [
        "0x03ec6d1529f9bfe10dfd841453f9cd844b69de963b88af809795b16c91dffd71"
      ],
      "tag": "evolute_duel-grnd_token",
      "selector": "0x63f272df1d90e70b29a629dc21fda1ac3b2cf5651499a915b7620c3dcf417fe",
      "systems": [
        "dojo_init",
        "mint",
        "burn",
        "reward_player",
        "set_minter",
        "set_burner",
        "upgrade",
        "transfer",
        "transfer_from",
        "approve",
        "transferFrom",
        "grant_role",
        "revoke_role",
        "renounce_role",
        "grantRole",
        "revokeRole",
        "renounceRole"
      ]
    },
    {
      "address": "0x67bf7b2d613b2da036c26a6e1e1d074be567081ef6368987713fe4e46cca4e9",
      "class_hash": "0x2d92ce479017b51d8def1eb611ed8cf2cc0cf26475c82be0feb0eeeb870e8ba",
      "abi": [
        {
          "type": "impl",
          "name": "matchmaking__ContractImpl",
          "interface_name": "dojo::contract::interface::IContract"
        },
        {
          "type": "interface",
          "name": "dojo::contract::interface::IContract",
          "items": []
        },
        {
          "type": "impl",
          "name": "matchmaking__DeployedContractImpl",
          "interface_name": "dojo::meta::interface::IDeployedResource"
        },
        {
          "type": "struct",
          "name": "core::byte_array::ByteArray",
          "members": [
            {
              "name": "data",
              "type": "core::array::Array::<core::bytes_31::bytes31>"
            },
            {
              "name": "pending_word",
              "type": "core::felt252"
            },
            {
              "name": "pending_word_len",
              "type": "core::integer::u32"
            }
          ]
        },
        {
          "type": "interface",
          "name": "dojo::meta::interface::IDeployedResource",
          "items": [
            {
              "type": "function",
              "name": "dojo_name",
              "inputs": [],
              "outputs": [
                {
                  "type": "core::byte_array::ByteArray"
                }
              ],
              "state_mutability": "view"
            }
          ]
        },
        {
          "type": "function",
          "name": "dojo_init",
          "inputs": [
            {
              "name": "initial_owner",
              "type": "core::starknet::contract_address::ContractAddress"
            }
          ],
          "outputs": [],
          "state_mutability": "external"
        },
        {
          "type": "impl",
          "name": "MatchmakingImpl",
          "interface_name": "evolute_duel::systems::matchmaking::IMatchmaking"
        },
        {
          "type": "enum",
          "name": "core::option::Option::<core::starknet::contract_address::ContractAddress>",
          "variants": [
            {
              "name": "Some",
              "type": "core::starknet::contract_address::ContractAddress"
            },
            {
              "name": "None",
              "type": "()"
            }
          ]
        },
        {
          "type": "enum",
          "name": "core::bool",
          "variants": [
            {
              "name": "False",
              "type": "()"
            },
            {
              "name": "True",
              "type": "()"
            }
          ]
        },
        {
          "type": "struct",
          "name": "core::array::Span::<core::integer::u8>",
          "members": [
            {
              "name": "snapshot",
              "type": "@core::array::Array::<core::integer::u8>"
            }
          ]
        },
        {
          "type": "enum",
          "name": "core::option::Option::<core::integer::u64>",
          "variants": [
            {
              "name": "Some",
              "type": "core::integer::u64"
            },
            {
              "name": "None",
              "type": "()"
            }
          ]
        },
        {
          "type": "interface",
          "name": "evolute_duel::systems::matchmaking::IMatchmaking",
          "items": [
            {
              "type": "function",
              "name": "create_game",
              "inputs": [
                {
                  "name": "game_mode",
                  "type": "core::integer::u8"
                },
                {
                  "name": "opponent",
                  "type": "core::option::Option::<core::starknet::contract_address::ContractAddress>"
                }
              ],
              "outputs": [],
              "state_mutability": "external"
            },
            {
              "type": "function",
              "name": "join_game",
              "inputs": [
                {
                  "name": "host_player",
                  "type": "core::starknet::contract_address::ContractAddress"
                }
              ],
              "outputs": [],
              "state_mutability": "external"
            },
            {
              "type": "function",
              "name": "cancel_game",
              "inputs": [],
              "outputs": [],
              "state_mutability": "external"
            },
            {
              "type": "function",
              "name": "update_config",
              "inputs": [
                {
                  "name": "game_mode",
                  "type": "core::integer::u8"
                },
                {
                  "name": "board_size",
                  "type": "core::integer::u8"
                },
                {
                  "name": "deck_type",
                  "type": "core::integer::u8"
                },
                {
                  "name": "initial_jokers",
                  "type": "core::integer::u8"
                },
                {
                  "name": "time_per_phase",
                  "type": "core::integer::u64"
                },
                {
                  "name": "auto_match",
                  "type": "core::bool"
                },
                {
                  "name": "deck",
                  "type": "core::array::Span::<core::integer::u8>"
                },
                {
                  "name": "edges",
                  "type": "(core::integer::u8, core::integer::u8)"
                },
                {
                  "name": "joker_price",
                  "type": "core::integer::u16"
                }
              ],
              "outputs": [],
              "state_mutability": "external"
            },
            {
              "type": "function",
              "name": "auto_match",
              "inputs": [
                {
                  "name": "game_mode",
                  "type": "core::integer::u8"
                },
                {
                  "name": "tournament_id",
                  "type": "core::option::Option::<core::integer::u64>"
                }
              ],
              "outputs": [
                {
                  "type": "core::felt252"
                }
              ],
              "state_mutability": "external"
            },
            {
              "type": "function",
              "name": "admin_cancel_game",
              "inputs": [
                {
                  "name": "player_address",
                  "type": "core::starknet::contract_address::ContractAddress"
                }
              ],
              "outputs": [],
              "state_mutability": "external"
            },
            {
              "type": "function",
              "name": "admin_set_admin",
              "inputs": [
                {
                  "name": "new_admin",
                  "type": "core::starknet::contract_address::ContractAddress"
                }
              ],
              "outputs": [],
              "state_mutability": "external"
            }
          ]
        },
        {
          "type": "impl",
          "name": "WorldProviderImpl",
          "interface_name": "dojo::contract::components::world_provider::IWorldProvider"
        },
        {
          "type": "struct",
          "name": "dojo::world::iworld::IWorldDispatcher",
          "members": [
            {
              "name": "contract_address",
              "type": "core::starknet::contract_address::ContractAddress"
            }
          ]
        },
        {
          "type": "interface",
          "name": "dojo::contract::components::world_provider::IWorldProvider",
          "items": [
            {
              "type": "function",
              "name": "world_dispatcher",
              "inputs": [],
              "outputs": [
                {
                  "type": "dojo::world::iworld::IWorldDispatcher"
                }
              ],
              "state_mutability": "view"
            }
          ]
        },
        {
          "type": "impl",
          "name": "UpgradeableImpl",
          "interface_name": "dojo::contract::components::upgradeable::IUpgradeable"
        },
        {
          "type": "interface",
          "name": "dojo::contract::components::upgradeable::IUpgradeable",
          "items": [
            {
              "type": "function",
              "name": "upgrade",
              "inputs": [
                {
                  "name": "new_class_hash",
                  "type": "core::starknet::class_hash::ClassHash"
                }
              ],
              "outputs": [],
              "state_mutability": "external"
            }
          ]
        },
        {
          "type": "impl",
          "name": "OwnableMixinImpl",
          "interface_name": "openzeppelin_access::ownable::interface::OwnableABI"
        },
        {
          "type": "interface",
          "name": "openzeppelin_access::ownable::interface::OwnableABI",
          "items": [
            {
              "type": "function",
              "name": "owner",
              "inputs": [],
              "outputs": [
                {
                  "type": "core::starknet::contract_address::ContractAddress"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "transfer_ownership",
              "inputs": [
                {
                  "name": "new_owner",
                  "type": "core::starknet::contract_address::ContractAddress"
                }
              ],
              "outputs": [],
              "state_mutability": "external"
            },
            {
              "type": "function",
              "name": "renounce_ownership",
              "inputs": [],
              "outputs": [],
              "state_mutability": "external"
            },
            {
              "type": "function",
              "name": "transferOwnership",
              "inputs": [
                {
                  "name": "newOwner",
                  "type": "core::starknet::contract_address::ContractAddress"
                }
              ],
              "outputs": [],
              "state_mutability": "external"
            },
            {
              "type": "function",
              "name": "renounceOwnership",
              "inputs": [],
              "outputs": [],
              "state_mutability": "external"
            }
          ]
        },
        {
          "type": "constructor",
          "name": "constructor",
          "inputs": []
        },
        {
          "type": "event",
          "name": "dojo::contract::components::upgradeable::upgradeable_cpt::Upgraded",
          "kind": "struct",
          "members": [
            {
              "name": "class_hash",
              "type": "core::starknet::class_hash::ClassHash",
              "kind": "data"
            }
          ]
        },
        {
          "type": "event",
          "name": "dojo::contract::components::upgradeable::upgradeable_cpt::Event",
          "kind": "enum",
          "variants": [
            {
              "name": "Upgraded",
              "type": "dojo::contract::components::upgradeable::upgradeable_cpt::Upgraded",
              "kind": "nested"
            }
          ]
        },
        {
          "type": "event",
          "name": "dojo::contract::components::world_provider::world_provider_cpt::Event",
          "kind": "enum",
          "variants": []
        },
        {
          "type": "event",
          "name": "openzeppelin_access::ownable::ownable::OwnableComponent::OwnershipTransferred",
          "kind": "struct",
          "members": [
            {
              "name": "previous_owner",
              "type": "core::starknet::contract_address::ContractAddress",
              "kind": "key"
            },
            {
              "name": "new_owner",
              "type": "core::starknet::contract_address::ContractAddress",
              "kind": "key"
            }
          ]
        },
        {
          "type": "event",
          "name": "openzeppelin_access::ownable::ownable::OwnableComponent::OwnershipTransferStarted",
          "kind": "struct",
          "members": [
            {
              "name": "previous_owner",
              "type": "core::starknet::contract_address::ContractAddress",
              "kind": "key"
            },
            {
              "name": "new_owner",
              "type": "core::starknet::contract_address::ContractAddress",
              "kind": "key"
            }
          ]
        },
        {
          "type": "event",
          "name": "openzeppelin_access::ownable::ownable::OwnableComponent::Event",
          "kind": "enum",
          "variants": [
            {
              "name": "OwnershipTransferred",
              "type": "openzeppelin_access::ownable::ownable::OwnableComponent::OwnershipTransferred",
              "kind": "nested"
            },
            {
              "name": "OwnershipTransferStarted",
              "type": "openzeppelin_access::ownable::ownable::OwnableComponent::OwnershipTransferStarted",
              "kind": "nested"
            }
          ]
        },
        {
          "type": "event",
          "name": "evolute_duel::systems::matchmaking::matchmaking::Event",
          "kind": "enum",
          "variants": [
            {
              "name": "UpgradeableEvent",
              "type": "dojo::contract::components::upgradeable::upgradeable_cpt::Event",
              "kind": "nested"
            },
            {
              "name": "WorldProviderEvent",
              "type": "dojo::contract::components::world_provider::world_provider_cpt::Event",
              "kind": "nested"
            },
            {
              "name": "OwnableEvent",
              "type": "openzeppelin_access::ownable::ownable::OwnableComponent::Event",
              "kind": "flat"
            }
          ]
        }
      ],
      "init_calldata": [
        "0x03ec6d1529f9bfe10dfd841453f9cd844b69de963b88af809795b16c91dffd71"
      ],
      "tag": "evolute_duel-matchmaking",
      "selector": "0x33a3b3e17aa3c1b699ebb3b27276ea0d47eb0c5c23070415ae1f9a72013b28e",
      "systems": [
        "dojo_init",
        "create_game",
        "join_game",
        "cancel_game",
        "update_config",
        "auto_match",
        "admin_cancel_game",
        "admin_set_admin",
        "upgrade",
        "transfer_ownership",
        "renounce_ownership",
        "transferOwnership",
        "renounceOwnership"
      ]
    },
    {
      "address": "0x72bf763c978c6c09fc46f2469c67727dc25e2375f2f1b2d0721350804c616e9",
      "class_hash": "0x7442e3e353ba5ad44bf6be2e53e2361a883ad4da42ae581b82933144972de69",
      "abi": [
        {
          "type": "impl",
          "name": "player_profile_actions__ContractImpl",
          "interface_name": "dojo::contract::interface::IContract"
        },
        {
          "type": "interface",
          "name": "dojo::contract::interface::IContract",
          "items": []
        },
        {
          "type": "impl",
          "name": "player_profile_actions__DeployedContractImpl",
          "interface_name": "dojo::meta::interface::IDeployedResource"
        },
        {
          "type": "struct",
          "name": "core::byte_array::ByteArray",
          "members": [
            {
              "name": "data",
              "type": "core::array::Array::<core::bytes_31::bytes31>"
            },
            {
              "name": "pending_word",
              "type": "core::felt252"
            },
            {
              "name": "pending_word_len",
              "type": "core::integer::u32"
            }
          ]
        },
        {
          "type": "interface",
          "name": "dojo::meta::interface::IDeployedResource",
          "items": [
            {
              "type": "function",
              "name": "dojo_name",
              "inputs": [],
              "outputs": [
                {
                  "type": "core::byte_array::ByteArray"
                }
              ],
              "state_mutability": "view"
            }
          ]
        },
        {
          "type": "function",
          "name": "dojo_init",
          "inputs": [
            {
              "name": "creator_address",
              "type": "core::starknet::contract_address::ContractAddress"
            }
          ],
          "outputs": [],
          "state_mutability": "external"
        },
        {
          "type": "impl",
          "name": "PlayerProfileActionsImpl",
          "interface_name": "evolute_duel::systems::player_profile_actions::IPlayerProfileActions"
        },
        {
          "type": "interface",
          "name": "evolute_duel::systems::player_profile_actions::IPlayerProfileActions",
          "items": [
            {
              "type": "function",
              "name": "set_player",
              "inputs": [
                {
                  "name": "player_id",
                  "type": "core::starknet::contract_address::ContractAddress"
                },
                {
                  "name": "username",
                  "type": "core::felt252"
                },
                {
                  "name": "balance",
                  "type": "core::integer::u32"
                },
                {
                  "name": "games_played",
                  "type": "core::felt252"
                },
                {
                  "name": "active_skin",
                  "type": "core::integer::u8"
                },
                {
                  "name": "role",
                  "type": "core::integer::u8"
                }
              ],
              "outputs": [],
              "state_mutability": "external"
            },
            {
              "type": "function",
              "name": "change_username",
              "inputs": [
                {
                  "name": "new_username",
                  "type": "core::felt252"
                }
              ],
              "outputs": [],
              "state_mutability": "external"
            },
            {
              "type": "function",
              "name": "change_skin",
              "inputs": [
                {
                  "name": "skin_id",
                  "type": "core::integer::u8"
                }
              ],
              "outputs": [],
              "state_mutability": "external"
            },
            {
              "type": "function",
              "name": "become_bot",
              "inputs": [],
              "outputs": [],
              "state_mutability": "external"
            },
            {
              "type": "function",
              "name": "become_controller",
              "inputs": [],
              "outputs": [],
              "state_mutability": "external"
            }
          ]
        },
        {
          "type": "impl",
          "name": "WorldProviderImpl",
          "interface_name": "dojo::contract::components::world_provider::IWorldProvider"
        },
        {
          "type": "struct",
          "name": "dojo::world::iworld::IWorldDispatcher",
          "members": [
            {
              "name": "contract_address",
              "type": "core::starknet::contract_address::ContractAddress"
            }
          ]
        },
        {
          "type": "interface",
          "name": "dojo::contract::components::world_provider::IWorldProvider",
          "items": [
            {
              "type": "function",
              "name": "world_dispatcher",
              "inputs": [],
              "outputs": [
                {
                  "type": "dojo::world::iworld::IWorldDispatcher"
                }
              ],
              "state_mutability": "view"
            }
          ]
        },
        {
          "type": "impl",
          "name": "UpgradeableImpl",
          "interface_name": "dojo::contract::components::upgradeable::IUpgradeable"
        },
        {
          "type": "interface",
          "name": "dojo::contract::components::upgradeable::IUpgradeable",
          "items": [
            {
              "type": "function",
              "name": "upgrade",
              "inputs": [
                {
                  "name": "new_class_hash",
                  "type": "core::starknet::class_hash::ClassHash"
                }
              ],
              "outputs": [],
              "state_mutability": "external"
            }
          ]
        },
        {
          "type": "impl",
          "name": "OwnableMixinImpl",
          "interface_name": "openzeppelin_access::ownable::interface::OwnableABI"
        },
        {
          "type": "interface",
          "name": "openzeppelin_access::ownable::interface::OwnableABI",
          "items": [
            {
              "type": "function",
              "name": "owner",
              "inputs": [],
              "outputs": [
                {
                  "type": "core::starknet::contract_address::ContractAddress"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "transfer_ownership",
              "inputs": [
                {
                  "name": "new_owner",
                  "type": "core::starknet::contract_address::ContractAddress"
                }
              ],
              "outputs": [],
              "state_mutability": "external"
            },
            {
              "type": "function",
              "name": "renounce_ownership",
              "inputs": [],
              "outputs": [],
              "state_mutability": "external"
            },
            {
              "type": "function",
              "name": "transferOwnership",
              "inputs": [
                {
                  "name": "newOwner",
                  "type": "core::starknet::contract_address::ContractAddress"
                }
              ],
              "outputs": [],
              "state_mutability": "external"
            },
            {
              "type": "function",
              "name": "renounceOwnership",
              "inputs": [],
              "outputs": [],
              "state_mutability": "external"
            }
          ]
        },
        {
          "type": "constructor",
          "name": "constructor",
          "inputs": []
        },
        {
          "type": "event",
          "name": "dojo::contract::components::upgradeable::upgradeable_cpt::Upgraded",
          "kind": "struct",
          "members": [
            {
              "name": "class_hash",
              "type": "core::starknet::class_hash::ClassHash",
              "kind": "data"
            }
          ]
        },
        {
          "type": "event",
          "name": "dojo::contract::components::upgradeable::upgradeable_cpt::Event",
          "kind": "enum",
          "variants": [
            {
              "name": "Upgraded",
              "type": "dojo::contract::components::upgradeable::upgradeable_cpt::Upgraded",
              "kind": "nested"
            }
          ]
        },
        {
          "type": "event",
          "name": "dojo::contract::components::world_provider::world_provider_cpt::Event",
          "kind": "enum",
          "variants": []
        },
        {
          "type": "event",
          "name": "openzeppelin_access::ownable::ownable::OwnableComponent::OwnershipTransferred",
          "kind": "struct",
          "members": [
            {
              "name": "previous_owner",
              "type": "core::starknet::contract_address::ContractAddress",
              "kind": "key"
            },
            {
              "name": "new_owner",
              "type": "core::starknet::contract_address::ContractAddress",
              "kind": "key"
            }
          ]
        },
        {
          "type": "event",
          "name": "openzeppelin_access::ownable::ownable::OwnableComponent::OwnershipTransferStarted",
          "kind": "struct",
          "members": [
            {
              "name": "previous_owner",
              "type": "core::starknet::contract_address::ContractAddress",
              "kind": "key"
            },
            {
              "name": "new_owner",
              "type": "core::starknet::contract_address::ContractAddress",
              "kind": "key"
            }
          ]
        },
        {
          "type": "event",
          "name": "openzeppelin_access::ownable::ownable::OwnableComponent::Event",
          "kind": "enum",
          "variants": [
            {
              "name": "OwnershipTransferred",
              "type": "openzeppelin_access::ownable::ownable::OwnableComponent::OwnershipTransferred",
              "kind": "nested"
            },
            {
              "name": "OwnershipTransferStarted",
              "type": "openzeppelin_access::ownable::ownable::OwnableComponent::OwnershipTransferStarted",
              "kind": "nested"
            }
          ]
        },
        {
          "type": "event",
          "name": "evolute_duel::systems::player_profile_actions::player_profile_actions::Event",
          "kind": "enum",
          "variants": [
            {
              "name": "UpgradeableEvent",
              "type": "dojo::contract::components::upgradeable::upgradeable_cpt::Event",
              "kind": "nested"
            },
            {
              "name": "WorldProviderEvent",
              "type": "dojo::contract::components::world_provider::world_provider_cpt::Event",
              "kind": "nested"
            },
            {
              "name": "OwnableEvent",
              "type": "openzeppelin_access::ownable::ownable::OwnableComponent::Event",
              "kind": "flat"
            }
          ]
        }
      ],
      "init_calldata": [
        "0x03ec6d1529f9bfe10dfd841453f9cd844b69de963b88af809795b16c91dffd71"
      ],
      "tag": "evolute_duel-player_profile_actions",
      "selector": "0x2fe51480cb4bcea87b911f6a9be5f5a1a39ee57c9aabb0617792aa4e03370e0",
      "systems": [
        "dojo_init",
        "set_player",
        "change_username",
        "change_skin",
        "become_bot",
        "become_controller",
        "upgrade",
        "transfer_ownership",
        "renounce_ownership",
        "transferOwnership",
        "renounceOwnership"
      ]
    },
    {
      "address": "0x392443d20e2e61078d0961f802457fe9b608ebb516b5e5e2578eb949a13b2de",
      "class_hash": "0x20ff3581256c6bf4fdef5be6c60eea0aeeaad1bcb18e7c92807a0abd805216e",
      "abi": [
        {
          "type": "impl",
          "name": "tournament_token__ContractImpl",
          "interface_name": "dojo::contract::interface::IContract"
        },
        {
          "type": "interface",
          "name": "dojo::contract::interface::IContract",
          "items": []
        },
        {
          "type": "impl",
          "name": "tournament_token__DeployedContractImpl",
          "interface_name": "dojo::meta::interface::IDeployedResource"
        },
        {
          "type": "struct",
          "name": "core::byte_array::ByteArray",
          "members": [
            {
              "name": "data",
              "type": "core::array::Array::<core::bytes_31::bytes31>"
            },
            {
              "name": "pending_word",
              "type": "core::felt252"
            },
            {
              "name": "pending_word_len",
              "type": "core::integer::u32"
            }
          ]
        },
        {
          "type": "interface",
          "name": "dojo::meta::interface::IDeployedResource",
          "items": [
            {
              "type": "function",
              "name": "dojo_name",
              "inputs": [],
              "outputs": [
                {
                  "type": "core::byte_array::ByteArray"
                }
              ],
              "state_mutability": "view"
            }
          ]
        },
        {
          "type": "function",
          "name": "dojo_init",
          "inputs": [
            {
              "name": "base_uri",
              "type": "core::felt252"
            }
          ],
          "outputs": [],
          "state_mutability": "external"
        },
        {
          "type": "impl",
          "name": "SettingsImpl",
          "interface_name": "tournaments::components::interfaces::ISettings"
        },
        {
          "type": "enum",
          "name": "core::bool",
          "variants": [
            {
              "name": "False",
              "type": "()"
            },
            {
              "name": "True",
              "type": "()"
            }
          ]
        },
        {
          "type": "interface",
          "name": "tournaments::components::interfaces::ISettings",
          "items": [
            {
              "type": "function",
              "name": "setting_exists",
              "inputs": [
                {
                  "name": "settings_id",
                  "type": "core::integer::u32"
                }
              ],
              "outputs": [
                {
                  "type": "core::bool"
                }
              ],
              "state_mutability": "view"
            }
          ]
        },
        {
          "type": "impl",
          "name": "GameDetailsImpl",
          "interface_name": "tournaments::components::interfaces::IGameDetails"
        },
        {
          "type": "interface",
          "name": "tournaments::components::interfaces::IGameDetails",
          "items": [
            {
              "type": "function",
              "name": "score",
              "inputs": [
                {
                  "name": "game_id",
                  "type": "core::integer::u64"
                }
              ],
              "outputs": [
                {
                  "type": "core::integer::u32"
                }
              ],
              "state_mutability": "view"
            }
          ]
        },
        {
          "type": "impl",
          "name": "TournamentTokenPublicImpl",
          "interface_name": "evolute_duel::systems::tokens::tournament_token::ITournamentTokenPublic"
        },
        {
          "type": "interface",
          "name": "evolute_duel::systems::tokens::tournament_token::ITournamentTokenPublic",
          "items": [
            {
              "type": "function",
              "name": "can_enlist_duelist",
              "inputs": [
                {
                  "name": "pass_id",
                  "type": "core::integer::u64"
                }
              ],
              "outputs": [
                {
                  "type": "core::bool"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "enlist_duelist",
              "inputs": [
                {
                  "name": "pass_id",
                  "type": "core::integer::u64"
                }
              ],
              "outputs": [],
              "state_mutability": "external"
            },
            {
              "type": "function",
              "name": "can_start_tournament",
              "inputs": [
                {
                  "name": "pass_id",
                  "type": "core::integer::u64"
                }
              ],
              "outputs": [
                {
                  "type": "core::bool"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "start_tournament",
              "inputs": [
                {
                  "name": "pass_id",
                  "type": "core::integer::u64"
                }
              ],
              "outputs": [
                {
                  "type": "core::integer::u64"
                }
              ],
              "state_mutability": "external"
            },
            {
              "type": "function",
              "name": "can_join_duel",
              "inputs": [
                {
                  "name": "pass_id",
                  "type": "core::integer::u64"
                }
              ],
              "outputs": [
                {
                  "type": "core::bool"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "join_duel",
              "inputs": [
                {
                  "name": "pass_id",
                  "type": "core::integer::u64"
                }
              ],
              "outputs": [
                {
                  "type": "core::felt252"
                }
              ],
              "state_mutability": "external"
            },
            {
              "type": "function",
              "name": "can_end_tournament",
              "inputs": [
                {
                  "name": "pass_id",
                  "type": "core::integer::u64"
                }
              ],
              "outputs": [
                {
                  "type": "core::bool"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "end_tournament",
              "inputs": [
                {
                  "name": "pass_id",
                  "type": "core::integer::u64"
                }
              ],
              "outputs": [
                {
                  "type": "core::integer::u64"
                }
              ],
              "state_mutability": "external"
            }
          ]
        },
        {
          "type": "impl",
          "name": "WorldProviderImpl",
          "interface_name": "dojo::contract::components::world_provider::IWorldProvider"
        },
        {
          "type": "struct",
          "name": "dojo::world::iworld::IWorldDispatcher",
          "members": [
            {
              "name": "contract_address",
              "type": "core::starknet::contract_address::ContractAddress"
            }
          ]
        },
        {
          "type": "interface",
          "name": "dojo::contract::components::world_provider::IWorldProvider",
          "items": [
            {
              "type": "function",
              "name": "world_dispatcher",
              "inputs": [],
              "outputs": [
                {
                  "type": "dojo::world::iworld::IWorldDispatcher"
                }
              ],
              "state_mutability": "view"
            }
          ]
        },
        {
          "type": "impl",
          "name": "UpgradeableImpl",
          "interface_name": "dojo::contract::components::upgradeable::IUpgradeable"
        },
        {
          "type": "interface",
          "name": "dojo::contract::components::upgradeable::IUpgradeable",
          "items": [
            {
              "type": "function",
              "name": "upgrade",
              "inputs": [
                {
                  "name": "new_class_hash",
                  "type": "core::starknet::class_hash::ClassHash"
                }
              ],
              "outputs": [],
              "state_mutability": "external"
            }
          ]
        },
        {
          "type": "impl",
          "name": "GameImpl",
          "interface_name": "tournaments::components::interfaces::IGameToken"
        },
        {
          "type": "enum",
          "name": "core::option::Option::<core::integer::u64>",
          "variants": [
            {
              "name": "Some",
              "type": "core::integer::u64"
            },
            {
              "name": "None",
              "type": "()"
            }
          ]
        },
        {
          "type": "struct",
          "name": "tournaments::components::models::game::GameMetadata",
          "members": [
            {
              "name": "contract_address",
              "type": "core::starknet::contract_address::ContractAddress"
            },
            {
              "name": "creator_address",
              "type": "core::starknet::contract_address::ContractAddress"
            },
            {
              "name": "name",
              "type": "core::felt252"
            },
            {
              "name": "description",
              "type": "core::byte_array::ByteArray"
            },
            {
              "name": "developer",
              "type": "core::felt252"
            },
            {
              "name": "publisher",
              "type": "core::felt252"
            },
            {
              "name": "genre",
              "type": "core::felt252"
            },
            {
              "name": "image",
              "type": "core::byte_array::ByteArray"
            }
          ]
        },
        {
          "type": "struct",
          "name": "tournaments::components::models::lifecycle::Lifecycle",
          "members": [
            {
              "name": "mint",
              "type": "core::integer::u64"
            },
            {
              "name": "start",
              "type": "core::option::Option::<core::integer::u64>"
            },
            {
              "name": "end",
              "type": "core::option::Option::<core::integer::u64>"
            }
          ]
        },
        {
          "type": "struct",
          "name": "tournaments::components::models::game::TokenMetadata",
          "members": [
            {
              "name": "token_id",
              "type": "core::integer::u64"
            },
            {
              "name": "minted_by",
              "type": "core::starknet::contract_address::ContractAddress"
            },
            {
              "name": "player_name",
              "type": "core::felt252"
            },
            {
              "name": "settings_id",
              "type": "core::integer::u32"
            },
            {
              "name": "lifecycle",
              "type": "tournaments::components::models::lifecycle::Lifecycle"
            }
          ]
        },
        {
          "type": "interface",
          "name": "tournaments::components::interfaces::IGameToken",
          "items": [
            {
              "type": "function",
              "name": "mint",
              "inputs": [
                {
                  "name": "player_name",
                  "type": "core::felt252"
                },
                {
                  "name": "settings_id",
                  "type": "core::integer::u32"
                },
                {
                  "name": "start",
                  "type": "core::option::Option::<core::integer::u64>"
                },
                {
                  "name": "end",
                  "type": "core::option::Option::<core::integer::u64>"
                },
                {
                  "name": "to",
                  "type": "core::starknet::contract_address::ContractAddress"
                }
              ],
              "outputs": [
                {
                  "type": "core::integer::u64"
                }
              ],
              "state_mutability": "external"
            },
            {
              "type": "function",
              "name": "emit_metadata_update",
              "inputs": [
                {
                  "name": "game_id",
                  "type": "core::integer::u64"
                }
              ],
              "outputs": [],
              "state_mutability": "external"
            },
            {
              "type": "function",
              "name": "game_metadata",
              "inputs": [],
              "outputs": [
                {
                  "type": "tournaments::components::models::game::GameMetadata"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "token_metadata",
              "inputs": [
                {
                  "name": "token_id",
                  "type": "core::integer::u64"
                }
              ],
              "outputs": [
                {
                  "type": "tournaments::components::models::game::TokenMetadata"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "game_count",
              "inputs": [],
              "outputs": [
                {
                  "type": "core::integer::u64"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "namespace",
              "inputs": [],
              "outputs": [
                {
                  "type": "core::byte_array::ByteArray"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "score_model",
              "inputs": [],
              "outputs": [
                {
                  "type": "core::byte_array::ByteArray"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "score_attribute",
              "inputs": [],
              "outputs": [
                {
                  "type": "core::byte_array::ByteArray"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "settings_model",
              "inputs": [],
              "outputs": [
                {
                  "type": "core::byte_array::ByteArray"
                }
              ],
              "state_mutability": "view"
            }
          ]
        },
        {
          "type": "impl",
          "name": "ERC721Impl",
          "interface_name": "openzeppelin_token::erc721::interface::IERC721"
        },
        {
          "type": "struct",
          "name": "core::integer::u256",
          "members": [
            {
              "name": "low",
              "type": "core::integer::u128"
            },
            {
              "name": "high",
              "type": "core::integer::u128"
            }
          ]
        },
        {
          "type": "struct",
          "name": "core::array::Span::<core::felt252>",
          "members": [
            {
              "name": "snapshot",
              "type": "@core::array::Array::<core::felt252>"
            }
          ]
        },
        {
          "type": "interface",
          "name": "openzeppelin_token::erc721::interface::IERC721",
          "items": [
            {
              "type": "function",
              "name": "balance_of",
              "inputs": [
                {
                  "name": "account",
                  "type": "core::starknet::contract_address::ContractAddress"
                }
              ],
              "outputs": [
                {
                  "type": "core::integer::u256"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "owner_of",
              "inputs": [
                {
                  "name": "token_id",
                  "type": "core::integer::u256"
                }
              ],
              "outputs": [
                {
                  "type": "core::starknet::contract_address::ContractAddress"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "safe_transfer_from",
              "inputs": [
                {
                  "name": "from",
                  "type": "core::starknet::contract_address::ContractAddress"
                },
                {
                  "name": "to",
                  "type": "core::starknet::contract_address::ContractAddress"
                },
                {
                  "name": "token_id",
                  "type": "core::integer::u256"
                },
                {
                  "name": "data",
                  "type": "core::array::Span::<core::felt252>"
                }
              ],
              "outputs": [],
              "state_mutability": "external"
            },
            {
              "type": "function",
              "name": "transfer_from",
              "inputs": [
                {
                  "name": "from",
                  "type": "core::starknet::contract_address::ContractAddress"
                },
                {
                  "name": "to",
                  "type": "core::starknet::contract_address::ContractAddress"
                },
                {
                  "name": "token_id",
                  "type": "core::integer::u256"
                }
              ],
              "outputs": [],
              "state_mutability": "external"
            },
            {
              "type": "function",
              "name": "approve",
              "inputs": [
                {
                  "name": "to",
                  "type": "core::starknet::contract_address::ContractAddress"
                },
                {
                  "name": "token_id",
                  "type": "core::integer::u256"
                }
              ],
              "outputs": [],
              "state_mutability": "external"
            },
            {
              "type": "function",
              "name": "set_approval_for_all",
              "inputs": [
                {
                  "name": "operator",
                  "type": "core::starknet::contract_address::ContractAddress"
                },
                {
                  "name": "approved",
                  "type": "core::bool"
                }
              ],
              "outputs": [],
              "state_mutability": "external"
            },
            {
              "type": "function",
              "name": "get_approved",
              "inputs": [
                {
                  "name": "token_id",
                  "type": "core::integer::u256"
                }
              ],
              "outputs": [
                {
                  "type": "core::starknet::contract_address::ContractAddress"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "is_approved_for_all",
              "inputs": [
                {
                  "name": "owner",
                  "type": "core::starknet::contract_address::ContractAddress"
                },
                {
                  "name": "operator",
                  "type": "core::starknet::contract_address::ContractAddress"
                }
              ],
              "outputs": [
                {
                  "type": "core::bool"
                }
              ],
              "state_mutability": "view"
            }
          ]
        },
        {
          "type": "impl",
          "name": "ERC721CamelOnlyImpl",
          "interface_name": "openzeppelin_token::erc721::interface::IERC721CamelOnly"
        },
        {
          "type": "interface",
          "name": "openzeppelin_token::erc721::interface::IERC721CamelOnly",
          "items": [
            {
              "type": "function",
              "name": "balanceOf",
              "inputs": [
                {
                  "name": "account",
                  "type": "core::starknet::contract_address::ContractAddress"
                }
              ],
              "outputs": [
                {
                  "type": "core::integer::u256"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "ownerOf",
              "inputs": [
                {
                  "name": "tokenId",
                  "type": "core::integer::u256"
                }
              ],
              "outputs": [
                {
                  "type": "core::starknet::contract_address::ContractAddress"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "safeTransferFrom",
              "inputs": [
                {
                  "name": "from",
                  "type": "core::starknet::contract_address::ContractAddress"
                },
                {
                  "name": "to",
                  "type": "core::starknet::contract_address::ContractAddress"
                },
                {
                  "name": "tokenId",
                  "type": "core::integer::u256"
                },
                {
                  "name": "data",
                  "type": "core::array::Span::<core::felt252>"
                }
              ],
              "outputs": [],
              "state_mutability": "external"
            },
            {
              "type": "function",
              "name": "transferFrom",
              "inputs": [
                {
                  "name": "from",
                  "type": "core::starknet::contract_address::ContractAddress"
                },
                {
                  "name": "to",
                  "type": "core::starknet::contract_address::ContractAddress"
                },
                {
                  "name": "tokenId",
                  "type": "core::integer::u256"
                }
              ],
              "outputs": [],
              "state_mutability": "external"
            },
            {
              "type": "function",
              "name": "setApprovalForAll",
              "inputs": [
                {
                  "name": "operator",
                  "type": "core::starknet::contract_address::ContractAddress"
                },
                {
                  "name": "approved",
                  "type": "core::bool"
                }
              ],
              "outputs": [],
              "state_mutability": "external"
            },
            {
              "type": "function",
              "name": "getApproved",
              "inputs": [
                {
                  "name": "tokenId",
                  "type": "core::integer::u256"
                }
              ],
              "outputs": [
                {
                  "type": "core::starknet::contract_address::ContractAddress"
                }
              ],
              "state_mutability": "view"
            },
            {
              "type": "function",
              "name": "isApprovedForAll",
              "inputs": [
                {
                  "name": "owner",
                  "type": "core::starknet::contract_address::ContractAddress"
                },
                {
                  "name": "operator",
                  "type": "core::starknet::contract_address::ContractAddress"
                }
              ],
              "outputs": [
                {
                  "type": "core::bool"
                }
              ],
              "state_mutability": "view"
            }
          ]
        },
        {
          "type": "impl",
          "name": "SRC5Impl",
          "interface_name": "openzeppelin_introspection::interface::ISRC5"
        },
        {
          "type": "interface",
          "name": "openzeppelin_introspection::interface::ISRC5",
          "items": [
            {
              "type": "function",
              "name": "supports_interface",
              "inputs": [
                {
                  "name": "interface_id",
                  "type": "core::felt252"
                }
              ],
              "outputs": [
                {
                  "type": "core::bool"
                }
              ],
              "state_mutability": "view"
            }
          ]
        },
        {
          "type": "constructor",
          "name": "constructor",
          "inputs": []
        },
        {
          "type": "event",
          "name": "dojo::contract::components::upgradeable::upgradeable_cpt::Upgraded",
          "kind": "struct",
          "members": [
            {
              "name": "class_hash",
              "type": "core::starknet::class_hash::ClassHash",
              "kind": "data"
            }
          ]
        },
        {
          "type": "event",
          "name": "dojo::contract::components::upgradeable::upgradeable_cpt::Event",
          "kind": "enum",
          "variants": [
            {
              "name": "Upgraded",
              "type": "dojo::contract::components::upgradeable::upgradeable_cpt::Upgraded",
              "kind": "nested"
            }
          ]
        },
        {
          "type": "event",
          "name": "dojo::contract::components::world_provider::world_provider_cpt::Event",
          "kind": "enum",
          "variants": []
        },
        {
          "type": "event",
          "name": "tournaments::components::game::game_component::MetadataUpdateEvent",
          "kind": "struct",
          "members": [
            {
              "name": "token_id",
              "type": "core::integer::u256",
              "kind": "key"
            }
          ]
        },
        {
          "type": "event",
          "name": "tournaments::components::game::game_component::Event",
          "kind": "enum",
          "variants": [
            {
              "name": "MetadataUpdate",
              "type": "tournaments::components::game::game_component::MetadataUpdateEvent",
              "kind": "nested"
            }
          ]
        },
        {
          "type": "event",
          "name": "openzeppelin_token::erc721::erc721::ERC721Component::Transfer",
          "kind": "struct",
          "members": [
            {
              "name": "from",
              "type": "core::starknet::contract_address::ContractAddress",
              "kind": "key"
            },
            {
              "name": "to",
              "type": "core::starknet::contract_address::ContractAddress",
              "kind": "key"
            },
            {
              "name": "token_id",
              "type": "core::integer::u256",
              "kind": "key"
            }
          ]
        },
        {
          "type": "event",
          "name": "openzeppelin_token::erc721::erc721::ERC721Component::Approval",
          "kind": "struct",
          "members": [
            {
              "name": "owner",
              "type": "core::starknet::contract_address::ContractAddress",
              "kind": "key"
            },
            {
              "name": "approved",
              "type": "core::starknet::contract_address::ContractAddress",
              "kind": "key"
            },
            {
              "name": "token_id",
              "type": "core::integer::u256",
              "kind": "key"
            }
          ]
        },
        {
          "type": "event",
          "name": "openzeppelin_token::erc721::erc721::ERC721Component::ApprovalForAll",
          "kind": "struct",
          "members": [
            {
              "name": "owner",
              "type": "core::starknet::contract_address::ContractAddress",
              "kind": "key"
            },
            {
              "name": "operator",
              "type": "core::starknet::contract_address::ContractAddress",
              "kind": "key"
            },
            {
              "name": "approved",
              "type": "core::bool",
              "kind": "data"
            }
          ]
        },
        {
          "type": "event",
          "name": "openzeppelin_token::erc721::erc721::ERC721Component::Event",
          "kind": "enum",
          "variants": [
            {
              "name": "Transfer",
              "type": "openzeppelin_token::erc721::erc721::ERC721Component::Transfer",
              "kind": "nested"
            },
            {
              "name": "Approval",
              "type": "openzeppelin_token::erc721::erc721::ERC721Component::Approval",
              "kind": "nested"
            },
            {
              "name": "ApprovalForAll",
              "type": "openzeppelin_token::erc721::erc721::ERC721Component::ApprovalForAll",
              "kind": "nested"
            }
          ]
        },
        {
          "type": "event",
          "name": "openzeppelin_introspection::src5::SRC5Component::Event",
          "kind": "enum",
          "variants": []
        },
        {
          "type": "event",
          "name": "evolute_duel::systems::tokens::tournament_token::tournament_token::Event",
          "kind": "enum",
          "variants": [
            {
              "name": "UpgradeableEvent",
              "type": "dojo::contract::components::upgradeable::upgradeable_cpt::Event",
              "kind": "nested"
            },
            {
              "name": "WorldProviderEvent",
              "type": "dojo::contract::components::world_provider::world_provider_cpt::Event",
              "kind": "nested"
            },
            {
              "name": "GameEvent",
              "type": "tournaments::components::game::game_component::Event",
              "kind": "flat"
            },
            {
              "name": "ERC721Event",
              "type": "openzeppelin_token::erc721::erc721::ERC721Component::Event",
              "kind": "flat"
            },
            {
              "name": "SRC5Event",
              "type": "openzeppelin_introspection::src5::SRC5Component::Event",
              "kind": "flat"
            }
          ]
        }
      ],
      "init_calldata": [
        "0x03ec6d1529f9bfe10dfd841453f9cd844b69de963b88af809795b16c91dffd71"
      ],
      "tag": "evolute_duel-tournament_token",
      "selector": "0x28906ae73499b532da933055f1f936ac9b8ce095f225a39a3c3d9665c8e109b",
      "systems": [
        "dojo_init",
        "enlist_duelist",
        "start_tournament",
        "join_duel",
        "end_tournament",
        "upgrade",
        "mint",
        "emit_metadata_update",
        "safe_transfer_from",
        "transfer_from",
        "approve",
        "set_approval_for_all",
        "safeTransferFrom",
        "transferFrom",
        "setApprovalForAll"
      ]
    },
    {
      "address": "0x2d173bf11e9f8bd5f5933fd098a178742851c3bb14bb2b5429fb5833dbefaf3",
      "class_hash": "0x32f89dd918757771a5dc7d7bdbd52c8a4061319592bd24e05f13da4fac178f4",
      "abi": [
        {
          "type": "impl",
          "name": "tutorial__ContractImpl",
          "interface_name": "dojo::contract::interface::IContract"
        },
        {
          "type": "interface",
          "name": "dojo::contract::interface::IContract",
          "items": []
        },
        {
          "type": "impl",
          "name": "tutorial__DeployedContractImpl",
          "interface_name": "dojo::meta::interface::IDeployedResource"
        },
        {
          "type": "struct",
          "name": "core::byte_array::ByteArray",
          "members": [
            {
              "name": "data",
              "type": "core::array::Array::<core::bytes_31::bytes31>"
            },
            {
              "name": "pending_word",
              "type": "core::felt252"
            },
            {
              "name": "pending_word_len",
              "type": "core::integer::u32"
            }
          ]
        },
        {
          "type": "interface",
          "name": "dojo::meta::interface::IDeployedResource",
          "items": [
            {
              "type": "function",
              "name": "dojo_name",
              "inputs": [],
              "outputs": [
                {
                  "type": "core::byte_array::ByteArray"
                }
              ],
              "state_mutability": "view"
            }
          ]
        },
        {
          "type": "impl",
          "name": "TutorialImpl",
          "interface_name": "evolute_duel::systems::tutorial::ITutorial"
        },
        {
          "type": "enum",
          "name": "core::option::Option::<core::integer::u8>",
          "variants": [
            {
              "name": "Some",
              "type": "core::integer::u8"
            },
            {
              "name": "None",
              "type": "()"
            }
          ]
        },
        {
          "type": "interface",
          "name": "evolute_duel::systems::tutorial::ITutorial",
          "items": [
            {
              "type": "function",
              "name": "make_move",
              "inputs": [
                {
                  "name": "joker_tile",
                  "type": "core::option::Option::<core::integer::u8>"
                },
                {
                  "name": "rotation",
                  "type": "core::integer::u8"
                },
                {
                  "name": "col",
                  "type": "core::integer::u8"
                },
                {
                  "name": "row",
                  "type": "core::integer::u8"
                }
              ],
              "outputs": [],
              "state_mutability": "external"
            },
            {
              "type": "function",
              "name": "skip_move",
              "inputs": [],
              "outputs": [],
              "state_mutability": "external"
            }
          ]
        },
        {
          "type": "function",
          "name": "dojo_init",
          "inputs": [],
          "outputs": [],
          "state_mutability": "view"
        },
        {
          "type": "impl",
          "name": "WorldProviderImpl",
          "interface_name": "dojo::contract::components::world_provider::IWorldProvider"
        },
        {
          "type": "struct",
          "name": "dojo::world::iworld::IWorldDispatcher",
          "members": [
            {
              "name": "contract_address",
              "type": "core::starknet::contract_address::ContractAddress"
            }
          ]
        },
        {
          "type": "interface",
          "name": "dojo::contract::components::world_provider::IWorldProvider",
          "items": [
            {
              "type": "function",
              "name": "world_dispatcher",
              "inputs": [],
              "outputs": [
                {
                  "type": "dojo::world::iworld::IWorldDispatcher"
                }
              ],
              "state_mutability": "view"
            }
          ]
        },
        {
          "type": "impl",
          "name": "UpgradeableImpl",
          "interface_name": "dojo::contract::components::upgradeable::IUpgradeable"
        },
        {
          "type": "interface",
          "name": "dojo::contract::components::upgradeable::IUpgradeable",
          "items": [
            {
              "type": "function",
              "name": "upgrade",
              "inputs": [
                {
                  "name": "new_class_hash",
                  "type": "core::starknet::class_hash::ClassHash"
                }
              ],
              "outputs": [],
              "state_mutability": "external"
            }
          ]
        },
        {
          "type": "constructor",
          "name": "constructor",
          "inputs": []
        },
        {
          "type": "event",
          "name": "dojo::contract::components::upgradeable::upgradeable_cpt::Upgraded",
          "kind": "struct",
          "members": [
            {
              "name": "class_hash",
              "type": "core::starknet::class_hash::ClassHash",
              "kind": "data"
            }
          ]
        },
        {
          "type": "event",
          "name": "dojo::contract::components::upgradeable::upgradeable_cpt::Event",
          "kind": "enum",
          "variants": [
            {
              "name": "Upgraded",
              "type": "dojo::contract::components::upgradeable::upgradeable_cpt::Upgraded",
              "kind": "nested"
            }
          ]
        },
        {
          "type": "event",
          "name": "dojo::contract::components::world_provider::world_provider_cpt::Event",
          "kind": "enum",
          "variants": []
        },
        {
          "type": "event",
          "name": "evolute_duel::systems::tutorial::tutorial::Event",
          "kind": "enum",
          "variants": [
            {
              "name": "UpgradeableEvent",
              "type": "dojo::contract::components::upgradeable::upgradeable_cpt::Event",
              "kind": "nested"
            },
            {
              "name": "WorldProviderEvent",
              "type": "dojo::contract::components::world_provider::world_provider_cpt::Event",
              "kind": "nested"
            }
          ]
        }
      ],
      "init_calldata": [],
      "tag": "evolute_duel-tutorial",
      "selector": "0xc1459904776212c8b7de02dc2bf94a023a77dcf3991d61aab18980d0aded3c",
      "systems": [
        "make_move",
        "skip_move",
        "upgrade"
      ]
    }
  ],
  "libraries": [],
  "models": [
    {
      "members": [],
      "class_hash": "0x6dda931d11709f77f11f0c9f8f37e4ee00b7909a325675a586be92f8eef1dfd",
      "tag": "evolute_duel-AvailableTiles",
      "selector": "0x2c2d9d3edf5e1783333be67dfb36e09ba3541b9fc21c08ee3201c06c7ec38c1"
    },
    {
      "members": [],
      "class_hash": "0x605db668de036b3eb1901989935afe8d640cd2059d786091f5c2c6e84bbef0b",
      "tag": "evolute_duel-Board",
      "selector": "0x836ef99f75ec03877951d491db5b9730a3f3552e3fc7d1c38a9f1abc320947"
    },
    {
      "members": [],
      "class_hash": "0x7c6de8ba768e6e53b6440a016dc139a56e114bb0803f0e3eda75d3aed9b9b02",
      "tag": "evolute_duel-Challenge",
      "selector": "0x790d3fb72fcbafa3c50ba7ae63f9d031d3f9362d16b1a6d4a814eef940f4cdf"
    },
    {
      "members": [],
      "class_hash": "0x7b7bbf05cf32cf5c4f757ddcf70a11471ca1558281dbaabfd3be0fbb9c59d4e",
      "tag": "evolute_duel-CoinConfig",
      "selector": "0x6cd959521d6e48459cdec7cb0941e2698107df1d28055a1a3a935de7cfcac4e"
    },
    {
      "members": [],
      "class_hash": "0x78422219d4ff90eaca938acd91e8d1dfed47be96340e1e13c348638d8825566",
      "tag": "evolute_duel-EntryCount",
      "selector": "0x7ce57358349dd9b45a458f3b00d0558f07b2b755f6dbfed6eb391718df64799"
    },
    {
      "members": [],
      "class_hash": "0x1fe77fc7bdca67ce0ad4b2b68af870d0d54c7263b1030f077ce5eb8b4aa01cb",
      "tag": "evolute_duel-EvltConfig",
      "selector": "0x271f513dfc2d4840627679399071d39a9a52c3023231ddca8822ab2d54363f5"
    },
    {
      "members": [],
      "class_hash": "0x2af7daf45cc26e299516c7378e1ce9562e2577078ed019b8b98ab015c6d2fbd",
      "tag": "evolute_duel-Game",
      "selector": "0x50eb71734a5acf3d804e250ff9e59bb3566e8bf9d30d0587d38cc2cc032e232"
    },
    {
      "members": [],
      "class_hash": "0x3cbfef2da761ebc755fc9a41a0d248441b4aaa8fc045942e3bea0583dfa21",
      "tag": "evolute_duel-GameConfig",
      "selector": "0x2bf9a36804fcd7e5516280098bb34fd9bde6d9e8815a2e2da309a08bf4c4d5a"
    },
    {
      "members": [],
      "class_hash": "0x4c9aa5cf3f03bd208fcfc809bbefd59074e319870fd54e699df593d2df01b4d",
      "tag": "evolute_duel-GameCounter",
      "selector": "0x10be6f80ba56f0dd048ba52d85dc08f842a93adf7a91626e3c2012868d6a35c"
    },
    {
      "members": [],
      "class_hash": "0x2184a8d33905eed66c3a80bd753a579aadd0b8dd0652f9f513dc7f1949f53c4",
      "tag": "evolute_duel-GameMetadata",
      "selector": "0x2f47b7c307bcc9fc7b498a5c543be80066bce00beb5b89d5709201dbcf3c870"
    },
    {
      "members": [],
      "class_hash": "0x64224661ce82a373642872dba8509719efbc530641b63afa3663213aeb7c7da",
      "tag": "evolute_duel-GrndConfig",
      "selector": "0x414b439f167d4de71cc5c1d359b38789ae261a852d2b56b73d303d318a2180"
    },
    {
      "members": [],
      "class_hash": "0xc7d0fa176501a408da3e5553695e9ed1c70bbc71198f8e0b9494fc0bad144f",
      "tag": "evolute_duel-Leaderboard",
      "selector": "0x150ff07b3d713cbc0a266c8baeda38e94fa51eb3599309548e74f81b01b1ad3"
    },
    {
      "members": [],
      "class_hash": "0x3ec7e7487f707e7ba031dac45996e2e3e621fb560a7e5acc706f398f20f0bf0",
      "tag": "evolute_duel-MatchmakingState",
      "selector": "0x6751515ee6a6800a77150fd986efaf4ff91bc2b2f2273d507f6c5be180f4beb"
    },
    {
      "members": [],
      "class_hash": "0x38777f14a857d07f7a5da68d7a3fe35c7c82615532ab08eb7df7ffff58d246a",
      "tag": "evolute_duel-MigrationRequest",
      "selector": "0x2998f71fff890dac471f5b1d7ca212e25f86734f68cc968990fce7d6f51de1a"
    },
    {
      "members": [],
      "class_hash": "0x57fb95c516ab79b0691f7d0b4c701fdbe1931ef10a51b3ff82b32e0cc11cfc2",
      "tag": "evolute_duel-Move",
      "selector": "0x6d7481ce108a8fbf6a107f7561809083890ccdb89931116448283bf99a278d5"
    },
    {
      "members": [],
      "class_hash": "0x716158d95aa44b736701ebf8090712883c46ec2d84be5870d51d726b628ba01",
      "tag": "evolute_duel-Pact",
      "selector": "0x68697f04c0ce588c60208a8ba3b6f9dc069920ca28eee9d2885f95e1f696dd"
    },
    {
      "members": [],
      "class_hash": "0x6e355bb1e763375ddfaa59349b5f86c52af1ed6d956f42ae40d532aef6c608f",
      "tag": "evolute_duel-PlatformMetrics",
      "selector": "0x335790aac15e0519f7c9d283208e2d56ca9cc314efa1558f8b45d9541ed4a6e"
    },
    {
      "members": [],
      "class_hash": "0x1e4cfe1dc16c533e3bf8a41108e5031f0982f182359a1cf4186182c1a2fed1a",
      "tag": "evolute_duel-Player",
      "selector": "0xd206bfcaacb44471c314c767d8bdf5b2c84b204fd362b85989b096baef7683"
    },
    {
      "members": [],
      "class_hash": "0x921f77b4908f67d0fa3260b303dafc600a1c86d6b6691268a1438bdcd0f5ee",
      "tag": "evolute_duel-PlayerAssignment",
      "selector": "0x7b4eadb499765b43d8c976d2f0452bd2cf3d0416803653c145d222a39b98775"
    },
    {
      "members": [],
      "class_hash": "0xf51850265a007268724272c09a6d2acf846165dd4ccacaae0a11acf9cb8cb5",
      "tag": "evolute_duel-PlayerMatchmaking",
      "selector": "0x399bb2238d9e7ee0fcf01496a4a828f7eb8848e9d2e1b2aa2c3ea3083bfeb5d"
    },
    {
      "members": [],
      "class_hash": "0xc7584ccbd368fd5853b1dfb2b700da30bc1850522e7842c2047be44984ee9f",
      "tag": "evolute_duel-PlayerTournamentIndex",
      "selector": "0x7b1f7d025a0f47328d76919a849b2b5ed6b844dc3b07dfb2a5739ddcea40268"
    },
    {
      "members": [],
      "class_hash": "0x21ff3d1db283fd3c508370c624a9a25ccac7a19ad93c2b68515219cc1c8fb2",
      "tag": "evolute_duel-PotentialContests",
      "selector": "0x14944971ac0df4a1c6ce3945f37f7fdaf9f0f7a011fc910538e4b8509fe5b2c"
    },
    {
      "members": [],
      "class_hash": "0x52ade26b349972115690eb0977b3fe8f574f20bbf8a91ffe5d1763c6135077",
      "tag": "evolute_duel-Prize",
      "selector": "0x2b4490c8329cf442d188b25b26f368fe31a08263878b8be9cd90df9d4cb6ebf"
    },
    {
      "members": [],
      "class_hash": "0x32f594f0064b023859ad5cb18831a5880e310d9c4a898b75c02e1b2d7b17001",
      "tag": "evolute_duel-PrizeClaim",
      "selector": "0x521ee16e53c383a298e5f266b35a58b0ccffb7ba66e9c501eedce65adce386"
    },
    {
      "members": [],
      "class_hash": "0x53e107f6f0a290d417c6c0f28df9fd199f8c7666cb61ac1fb24ea9da9519489",
      "tag": "evolute_duel-PrizeMetrics",
      "selector": "0x2720c6fd49986e88dd9617e61722a1942ccc7606a01726b2a0d14c43a4c1258"
    },
    {
      "members": [],
      "class_hash": "0x32fc5a1520015d90590fbedd6f4ce012d7c6a08e786f2a8b0ca2d2715302533",
      "tag": "evolute_duel-QualificationEntries",
      "selector": "0x24809cf99f11dc9c62d4864a1805302d44900dbf7c3ab9a370705e4f81c058f"
    },
    {
      "members": [],
      "class_hash": "0x240dd50803b66aba4fd8232426f68469c592e4a88fd9c5bc9ec11fc6a6315f4",
      "tag": "evolute_duel-Registration",
      "selector": "0x1db21dead1a017ab3d5cb096795c1955768d9d74977afc7a002c144452e5176"
    },
    {
      "members": [],
      "class_hash": "0x448a01b3d30736b55b5fba54de4159e82af2c495507d65f07bb6ba466ed3802",
      "tag": "evolute_duel-Rules",
      "selector": "0x30d5405d0bc6c63a7d0adbc0ac48016a5d787662670e4d25bf12985431d032c"
    },
    {
      "members": [],
      "class_hash": "0x7538cc093e191e767f1caf8ea3f1c4818e319db41d8f760e48753cb2e420156",
      "tag": "evolute_duel-Score",
      "selector": "0x1fefdc667e6b86a175507294909da8a06cc54aec97699c66fc2138397717cc2"
    },
    {
      "members": [],
      "class_hash": "0x2a8c1b7de94980b6650e0489c1231c3439ee8b199dfa289da5a3c05653a0eae",
      "tag": "evolute_duel-Scoreboard",
      "selector": "0x6a16203773eb3274eb515c0a6ce11e86ea11feda8733302406c0a369125e6b6"
    },
    {
      "members": [],
      "class_hash": "0x1209baf4f84faefa02c38ae721ddc691755ff4ea5993861fa22d822c913ab5b",
      "tag": "evolute_duel-Settings",
      "selector": "0x40bac98505241f9fe70fe3cde4ca277419399949d188f344a9ae841e2500b3f"
    },
    {
      "members": [],
      "class_hash": "0x4e0c7a60762ca47580e47d2d2dcb27dd5ad33262075cb9b126d670e97c67837",
      "tag": "evolute_duel-SettingsCounter",
      "selector": "0x5bc97ff304579de270b22c5ac1ba9a2f0cde677c04473ccfea2ed68edbdb77a"
    },
    {
      "members": [],
      "class_hash": "0x5a1e9671225dd42b4085d3fb27a7543ee87f0cb687514002e7b4d9fa77c78a1",
      "tag": "evolute_duel-SettingsDetails",
      "selector": "0x54e0cc05ab0bd15fad30ff9b0739d7022431d8161f9362e1a6284c4ed67bbde"
    },
    {
      "members": [],
      "class_hash": "0x43983b43a71d1c33999fde0dce15510df0e466cf2c16904058330d59213c699",
      "tag": "evolute_duel-Shop",
      "selector": "0x222f976f10d5f7bc6ff181000844ce4341a875fc25c8c6302525df530bbc802"
    },
    {
      "members": [],
      "class_hash": "0x51258d021157bdb52a7f0300a0598affaeda2c4f697b1021b329e286e3ac017",
      "tag": "evolute_duel-TileCommitments",
      "selector": "0x329a0c810113b6ae6bb6a52b2ea18fa99cf718b65aafb67231b45b336175e21"
    },
    {
      "members": [],
      "class_hash": "0x4f8543d252f818a4efbbacf72260a4f3a757a91291878742681f6f8c4cd534e",
      "tag": "evolute_duel-Token",
      "selector": "0x658d10bf6c3f68871b51f7a9347731a58d521caa79fae2441dec2cc1a114b7b"
    },
    {
      "members": [],
      "class_hash": "0x336f9d3953c032d579de6675aa25e2903ea50708399ca5ec3312ee3480e7cca",
      "tag": "evolute_duel-TokenMetadata",
      "selector": "0x40c1342f90ac71bc310cb1267fd7db8ed6f30d2f1888e0d15bdf69217cd3ba8"
    },
    {
      "members": [],
      "class_hash": "0x669463fea499d5d8463e2ba035faa851789c88b2323745ee690e3308f12f3b1",
      "tag": "evolute_duel-Tournament",
      "selector": "0x5dd12ee76135de9fb9563cd290f74499e4b174fd3f30003cbf77c56dd38b85e"
    },
    {
      "members": [],
      "class_hash": "0x1a07676d9e9fa562224d1025fab145b8624bec92cc7597d9cfdf10eb66beb25",
      "tag": "evolute_duel-TournamentBalance",
      "selector": "0x421a46f64f4f67e5b2fb63269cab5f6c13dc759301a8d05634aee1f0147776"
    },
    {
      "members": [],
      "class_hash": "0x451b123fc1b1a56743164d74fc806ea0e6cf7c5c36e515fc8d43e570614a1b2",
      "tag": "evolute_duel-TournamentChallenge",
      "selector": "0x4b27db06d290823a07322b816d88caa3bdeab261523a5a3c06dffc9d259a9a2"
    },
    {
      "members": [],
      "class_hash": "0x553fc910fd75e751875f259c4553bbf959b6f8917b1153c7d8d05833c1fe114",
      "tag": "evolute_duel-TournamentConfig",
      "selector": "0xe7cca9e33bd398d1909a7818be494199a5b6821357f37960548ee4a29ff325"
    },
    {
      "members": [],
      "class_hash": "0x1cba978af802e7a08dab492b4e3fc74b3247d36cb2965b2c66f49fe37ceab7b",
      "tag": "evolute_duel-TournamentPass",
      "selector": "0x278c402f7e2f6c30e335962e6457b52b356111e3d1bd3f1bd801e63da6a3bfe"
    },
    {
      "members": [],
      "class_hash": "0x1dba6d06547b6f6c65bddbd4a842baeb6697f6856888437c75efe5092a1ab4a",
      "tag": "evolute_duel-TournamentSettings",
      "selector": "0x41bff06df63fddd957f35dd74b6e50c0ebbe5f8e0754efee53abba856ccf1e9"
    },
    {
      "members": [],
      "class_hash": "0x669857254f9cf1ff90e80b6cbc13876cbe4e7065ff2360adf85fe3ffd53c987",
      "tag": "evolute_duel-TournamentTokenMetrics",
      "selector": "0x539e289b6e96e4e571589c203a4dd0cb144565a72aaf44d832d5ef95e921c5"
    },
    {
      "members": [],
      "class_hash": "0x7fe191e80525490714af6c0bd28c34dbebc41c8afbf20116690f9f1e50c5319",
      "tag": "evolute_duel-UnionNode",
      "selector": "0x4aa3dc671ce6d18082534f8f0384218f7fd1a1a2cb8a48c49d5daa3f2a931c2"
    }
  ],
  "events": [
    {
      "members": [],
      "class_hash": "0x72ee36061ff390d3822f051765395786c9aae63901f123236a205dcf4b01977",
      "tag": "evolute_duel-BoardUpdated",
      "selector": "0x1352659f5307c3478b85ed999c391ac8768670156647c54e3d0edfd3acd61de"
    },
    {
      "members": [],
      "class_hash": "0x5e5198ab322c6b5457ce8d16ece6b3cab1a625cc31639f0da56305831b33b2b",
      "tag": "evolute_duel-CityContestDraw",
      "selector": "0x2df1018feebb9da98032ee5225e63e66e9444943b9089d1d9b133a66e6901b1"
    },
    {
      "members": [],
      "class_hash": "0x3702a8b674d408c20f1f31b9332566054d490af67e850077eeaafa21a002b9a",
      "tag": "evolute_duel-CityContestWon",
      "selector": "0x37ae9aab78ea3451c19542df000a855eec3d8f7436e6d0133c10523b025d662"
    },
    {
      "members": [],
      "class_hash": "0x6cf056face8f106bf5f01b5f67c94897871f08e687cbcb18062764d7ef64dad",
      "tag": "evolute_duel-EevltBurned",
      "selector": "0x20430cd289c1824423f6391cd579440e3510933628d238287f0dfc48bdc2f56"
    },
    {
      "members": [],
      "class_hash": "0x5c49cb792b626eea354d45a1cd06070d82913c31e91b267ddb79c29be2bf7aa",
      "tag": "evolute_duel-EevltMinted",
      "selector": "0x277c7fcbce4cf7d723990968258ea7bbe9b39d879a898adb972653225865982"
    },
    {
      "members": [],
      "class_hash": "0x4687164b535ed0c91bbb56b146e0e46f96a00ff6d193f3e696bc0eb2eb40d9d",
      "tag": "evolute_duel-EmergencyMigrationCancelled",
      "selector": "0x803bd19a470281e2846951086c717e2a1058ad31d129e625dbf68c18d7dc42"
    },
    {
      "members": [],
      "class_hash": "0x62b7b6f376d038e0d882309e85e06508ba0a184b3d76898fb149710990c2557",
      "tag": "evolute_duel-ErrorEvent",
      "selector": "0x8363df6566a5bd5eec42e11fc59c68b60a8a8994432ac4ac53f0e79509e915"
    },
    {
      "members": [],
      "class_hash": "0x7b87350efa4487c0ee4f2b46ddc96729dc105b53a314375b8e1d66740ade608",
      "tag": "evolute_duel-GameCanceleFailed",
      "selector": "0x113dcf91ca9d4d9f3ba4d11563cf5fc414a1e7e7008f593e4e8142c3644907a"
    },
    {
      "members": [],
      "class_hash": "0x6f37956221af943c0807c4cc988d39281ab58a4de716cfb50fd8983f9c552f3",
      "tag": "evolute_duel-GameCanceled",
      "selector": "0x32cbf0a2e3702b3a487fe9eb046045c2dfbedd864465a2c8e0f61d567ff839c"
    },
    {
      "members": [],
      "class_hash": "0x6b27cc0f07db304d0fac339aa70bf885a316c09dd562d2b2133cc40a830483",
      "tag": "evolute_duel-GameCreateFailed",
      "selector": "0x1bd4a12eb88a971444ea1e25c0d0e3d6737f6afc4cd5cc9102747ac36a1b980"
    },
    {
      "members": [],
      "class_hash": "0x4a8b9ba529f676985717a8426243ac57ec29cfbc9298f720aa275252dc9ba2",
      "tag": "evolute_duel-GameCreated",
      "selector": "0x668233b95923832d04af3e8e7df9e8688cac7c430b1a18e4dbc66c88d1bf0a6"
    },
    {
      "members": [],
      "class_hash": "0xfbf49411dc6d481f2a7aa3844da5c805a03b8c76fe79586445557d589da3c3",
      "tag": "evolute_duel-GameFinished",
      "selector": "0x33462448061afcb9e5cff6a2bcee05ed5d8aa1e366c8dbd0240b59dd4fbad0"
    },
    {
      "members": [],
      "class_hash": "0x6e8d7617af8c7f1859852ec6f987abf731f79028ebbebac65337b7cfa4f3d55",
      "tag": "evolute_duel-GameJoinFailed",
      "selector": "0x208170d1ab20b178e8af5c51e5192c9e8f14e420761c5802722ca0b4adcbd2e"
    },
    {
      "members": [],
      "class_hash": "0x3662bbd0a6b6e6c5401865571ca0f4c67bd30f92305d1773e1cde7ef6a9055f",
      "tag": "evolute_duel-GameStarted",
      "selector": "0x4509051842dc1402882215bcdedc7f498e2eb1a160c1348570aa2d38fd360c0"
    },
    {
      "members": [],
      "class_hash": "0x7081b674a7633c369121cec0a7eb034d1d3045d03edf57fec03d6d9b328f769",
      "tag": "evolute_duel-InvalidMove",
      "selector": "0x2961857ea4682513ae1586fb617e4bf12bdc163f7b35df10b043a4455ec18e1"
    },
    {
      "members": [],
      "class_hash": "0x639dc5a28d5098e2d09fd246f2bbc1023a84ecd813c70d40eb279b474e1a43c",
      "tag": "evolute_duel-MigrationCancelled",
      "selector": "0x1d206d67da813cb206f0419383bde9d6a1b64390d3f50573ac3415bbd53e9a2"
    },
    {
      "members": [],
      "class_hash": "0x61dd84e5512883294516ca197291d4590e1d2618818b91d210ebb7b14676ea5",
      "tag": "evolute_duel-MigrationCompleted",
      "selector": "0x334852ed416f12039c4da97a6dd51da94441d2621a6c6fd75f3765b1efc017d"
    },
    {
      "members": [],
      "class_hash": "0x536db0a819dd54f74f12252f06197bc9c1c0f77f42c0db1fb56dbde95ec1538",
      "tag": "evolute_duel-MigrationConfirmed",
      "selector": "0x7f11fb27ed5dca93dfbd4b21227055eb10b956bd6218cbcc60826dc0685bcce"
    },
    {
      "members": [],
      "class_hash": "0x3057a8c72d547cd9010b7310bd0146413366e61dc2ca63bb4dd15cd6814e272",
      "tag": "evolute_duel-MigrationError",
      "selector": "0xd3d99783b06e5622bd1a30f3bf0d2bf1b1e437e1a654d3a94d1ae74c271f0c"
    },
    {
      "members": [],
      "class_hash": "0x39490e32805dab11e1906ee72fcd08d915a1cd88b3f766f98a297f00391e9bb",
      "tag": "evolute_duel-MigrationInitiated",
      "selector": "0x65a0d3280c917d842642cef290c9e4ae6309229c1a80b22b56b8d4999183ab2"
    },
    {
      "members": [],
      "class_hash": "0x4b39282e4c7905324eb336f04a196dd1b13e68c6a5d64b4cd8f8fc6a2e3c92",
      "tag": "evolute_duel-Moved",
      "selector": "0x3ca22e802348ce9fa7b011f883499ac79ca68442272661cc75ea51808da74d2"
    },
    {
      "members": [],
      "class_hash": "0x5d6b41a2fbd9637730192b067a016b94849cece34a21a9dbc4c6d1cb31fb03",
      "tag": "evolute_duel-NotEnoughJokers",
      "selector": "0x32eeb70d90473d3f1f2835c85305f6be04f406f5e82d04be096e74d9dedd9d1"
    },
    {
      "members": [],
      "class_hash": "0x1ba34749a96ec54f675de8c758f6bbcdba53c73347202ebd8cd6e551230cebc",
      "tag": "evolute_duel-NotYourTurn",
      "selector": "0x3fa0a73cd88ffc42bc7aa5a689f0e1cb1b17634b28156b12a6653f74dea2906"
    },
    {
      "members": [],
      "class_hash": "0x7a0d807cb05e093ea67e169b5147e1949f2d10841337d52cbfa748fb3e46d0b",
      "tag": "evolute_duel-PhaseStarted",
      "selector": "0x55d9a9d79c6e4fd36646cba7272f7be7c62fdd9f9b1ccac9ce32533c7040523"
    },
    {
      "members": [],
      "class_hash": "0x5c5aff1725134517d9f79f6910e1dc0d2f58810b3b44cb802850c2244dad690",
      "tag": "evolute_duel-PlayerNotInGame",
      "selector": "0x739d0a1050e8444702e4adb2fca7c6b3c0844d6ab20959088abfb5c2a42bf2a"
    },
    {
      "members": [],
      "class_hash": "0x7e061fc2dbe415c458074744fa9d6c419b30b9ab5e404ff5a37dba1f6d1e2df",
      "tag": "evolute_duel-PlayerSkinChangeFailed",
      "selector": "0x67055a4f0297923a761e2f026532239bae7ce092d2ddd80f8598ced10a79a6b"
    },
    {
      "members": [],
      "class_hash": "0x1eeb561460d808dfaf92c6b80a4368bb6dbf9b36bb4373923949263141f2906",
      "tag": "evolute_duel-PlayerSkinChanged",
      "selector": "0x6dbdbb85ae5cda0387e7139543287ad5f74d5e2960249912c704db4068fa4c6"
    },
    {
      "members": [],
      "class_hash": "0xf962180d37307444ed4c7b12d95f4e562d0abf5cee43f90c43dd95d2814f72",
      "tag": "evolute_duel-PlayerUsernameChanged",
      "selector": "0x288345f6380a8662043d3a074a7ca2a9bd9ab5e6b5ffdd65455f98668bc7cf1"
    },
    {
      "members": [],
      "class_hash": "0x206515d961fd06fac0cf8613652861810231c0eef9062a6255c4b952e71150d",
      "tag": "evolute_duel-RoadContestDraw",
      "selector": "0x24a2fe8b1c6ad2e623ffc8aa565d4a95e12e2b47bd019c5707cb883e4e4ff8e"
    },
    {
      "members": [],
      "class_hash": "0x5887beec15c2394399ec4f33c17901f58dd90088d120d2343797233658f8551",
      "tag": "evolute_duel-RoadContestWon",
      "selector": "0x3aa5a15e19f8678319cb6252902021f2618c1affe2390bf8c27fdfa6f6e2a74"
    },
    {
      "members": [],
      "class_hash": "0x5c49becdd46df194174414b8660de3130dbdf1194e4b293808b39c6cbb0164e",
      "tag": "evolute_duel-Skiped",
      "selector": "0x39293e825ec4e370540eb80b631e5656df258d3c1bc482df503857eb3b45861"
    },
    {
      "members": [],
      "class_hash": "0x1704006d37adc387fad5e33dbb8f224d6faa9d82fa827e6488c439b36f7f4ee",
      "tag": "evolute_duel-SnapshotCreateFailed",
      "selector": "0x6a71fde306f7bc38a1e367f2aea529bdc0132f128f6a1dbc5cb9efc76a0e1d6"
    },
    {
      "members": [],
      "class_hash": "0x31a5c7ce5269ba6c4498b5f4f53a457e10ef3370b41f035ae19f1dd719bc0d5",
      "tag": "evolute_duel-SnapshotCreated",
      "selector": "0x6fed26327ca07777dd3893593d37519821930f0f8b06c54db12989ba6b20703"
    },
    {
      "members": [],
      "class_hash": "0x702d5440a155e0704b268f8d6dbf74cb8ae09b164064fe3b4f896cf725dcac7",
      "tag": "evolute_duel-TrophyCreation",
      "selector": "0x62464d1b1e16fb532116fa08f25e545c8a8089d16473d61256e8b3ea8f132bf"
    },
    {
      "members": [],
      "class_hash": "0x113e43bc604068a5811205b126a3e318b21e5c72746138efa6fb40277067f00",
      "tag": "evolute_duel-TrophyProgression",
      "selector": "0x5d087bb1cc662181d9fd66fe2145fcaafdadcb57f350bbad05a2d1e206e6e17"
    },
    {
      "members": [],
      "class_hash": "0x496043c8ecd7adbece1d6596c4e94306bd530945ca8f580abbd90cf14805986",
      "tag": "evolute_duel-TutorialCompleted",
      "selector": "0x2be0888193756d94797e44b30bf030f9337068403d5217850a01ac8cf49d9d2"
    }
  ],
  "external_contracts": []
}